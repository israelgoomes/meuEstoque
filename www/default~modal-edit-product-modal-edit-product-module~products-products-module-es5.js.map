{"version":3,"sources":["webpack:///src/app/modal-edit-product/modal-edit-product.page.html","webpack:///src/app/modal-edit-product/modal-edit-product.page.scss","webpack:///src/app/modal-edit-product/modal-edit-product.page.ts","webpack:///src/app/services/alert-service/alert-service.service.ts","webpack:///src/app/services/product-service/product.service.ts","webpack:///src/app/services/provider-service/provider.service.ts"],"names":["ModalEditProductPage","modalCtrl","fb","productSrvc","spinnerSrvc","alertSrvc","providerSrvc","onCompany","JSON","parse","localStorage","getItem","storageKeys","user","providers","getProviders","idCompany","subscribe","data","hide","productForm","group","amount","product","cdProduct","dtRegister","idProduct","inActive","manufacturer","name","idProvider","shelfLife","vlInput","vlOutput","update","value","dismiss","toast","error","selector","template","AlertService","alertCtrl","toastCtrl","header","message","create","buttons","text","handler","blah","alert","present","callback","role","cssClass","console","log","duration","position","providedIn","ProductService","http","htt2","updtaeProductData","url","URL2","id","get","put","post","ProviderService"],"mappings":"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","file":"default~modal-edit-product-modal-edit-product-module~products-products-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Editar Produto</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card>\\n    <ion-card-content>\\n  <form [formGroup]=\\\"productForm\\\" class=\\\"example-form\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Produto\\\" formControlName=\\\"name\\\" name=\\\"teste\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Fabricante\\\" formControlName=\\\"manufacturer\\\" name=\\\"teste\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Código do Produto\\\" formControlName=\\\"cdProduct\\\" name=\\\"teste\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width create\\\">\\n      <mat-label>Fornecedor</mat-label>\\n      <mat-select [value]=\\\"productForm.get('idProvider').value\\\" formControlName=\\\"idProvider\\\">\\n        <mat-option *ngFor=\\\"let l of providers\\\" [value]=\\\"l.idProvider\\\">\\n          {{l.name}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Valor entrada\\\" formControlName=\\\"vlInput\\\" name=\\\"teste\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Valor saída\\\" formControlName=\\\"vlOutput\\\" name=\\\"teste\\\">\\n    </mat-form-field>\\n    \\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"number\\\" formControlName=\\\"amount\\\" placeholder=\\\"Quantidade\\\" min=\\\"1\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Validade\\\" formControlName=\\\"name\\\" name=\\\"teste\\\">\\n    </mat-form-field>\\n  </form>\\n</ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-title></ion-title>\\n    <button mat-raised-button color=\\\"success\\\" style=\\\"background-color: #62462B; float: left; color: white;\\\" (click)=\\\"cancel()\\\">Cancelar</button>\\n    <button mat-raised-button style=\\\"border: 1px solid #62462B; float: right;\\\" (click)=\\\"save()\\\">Salvar</button>\\n  \\n  </ion-toolbar>\\n\\n\";","export default \"mat-form-field {\\n  width: 100%;\\n}\\n\\nion-footer {\\n  --ion-background-color: white;\\n}\\n\\nion-header {\\n  --ion-background-color: #62462B;\\n}\\n\\nion-title {\\n  color: white;\\n}\\n\\nbutton {\\n  margin: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kYWwtZWRpdC1wcm9kdWN0L0M6XFxVc2Vyc1xcbHNyYWVsXFxEZXNrdG9wXFxkZXNrdG9wXFxlc3RvcXVlXFxpbUFwcC9zcmNcXGFwcFxcbW9kYWwtZWRpdC1wcm9kdWN0XFxtb2RhbC1lZGl0LXByb2R1Y3QucGFnZS5zY3NzIiwic3JjL2FwcC9tb2RhbC1lZGl0LXByb2R1Y3QvbW9kYWwtZWRpdC1wcm9kdWN0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7QUNDSjs7QURFQTtFQUNJLDZCQUFBO0FDQ0o7O0FERUE7RUFDSSwrQkFBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbW9kYWwtZWRpdC1wcm9kdWN0L21vZGFsLWVkaXQtcHJvZHVjdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5pb24tZm9vdGVye1xyXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmlvbi1oZWFkZXJ7XHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjNjI0NjJCO1xyXG59XHJcblxyXG5pb24tdGl0bGV7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmJ1dHRvbntcclxuICAgIG1hcmdpbjogMDVweDtcclxufSIsIm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbmlvbi1mb290ZXIge1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cblxuaW9uLWhlYWRlciB7XG4gIC0taW9uLWJhY2tncm91bmQtY29sb3I6ICM2MjQ2MkI7XG59XG5cbmlvbi10aXRsZSB7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuYnV0dG9uIHtcbiAgbWFyZ2luOiA1cHg7XG59Il19 */\";","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ProductService } from '../services/product-service/product.service';\nimport { SpinnerService } from '../services/spinner-service/spinner.service';\nimport { AlertService } from '../services/alert-service/alert-service.service';\nimport { ProviderService } from '../services/provider-service/provider.service';\nimport { configHelper } from '../configurations/configHelper';\n\n@Component({\n  selector: 'app-modal-edit-product',\n  templateUrl: './modal-edit-product.page.html',\n  styleUrls: ['./modal-edit-product.page.scss'],\n})\nexport class ModalEditProductPage implements OnInit {\n\n  onCompany = JSON.parse(localStorage.getItem(configHelper.storageKeys.user));\n  productForm: FormGroup;\n  providers = [];\n  @Input() product;\n  constructor(\n    private modalCtrl: ModalController,\n    private fb: FormBuilder,\n    private productSrvc: ProductService,\n    private spinnerSrvc: SpinnerService,\n    private alertSrvc: AlertService,\n    private providerSrvc: ProviderService\n  ) {}\n\n  ngOnInit() {\n    this.providerSrvc\n      .getProviders(this.onCompany[0].idCompany)\n      .subscribe((data) => {\n        this.providers = data;\n        this.spinnerSrvc.hide();\n      });\n\n    this.productForm = this.fb.group({\n      amount: [this.product.amount],\n      cdProduct: [this.product.cdProduct],\n      dtRegister: [this.product.dtRegister],\n      idCompany: [this.product.idCompany],\n      idProduct: [this.product.idProduct],\n      inActive: [this.product.inActive],\n      manufacturer: [this.product.manufacturer],\n      name: [this.product.name],\n      idProvider: [this.product.idProvider],\n      shelfLife: [this.product.shelfLife],\n      vlInput: [this.product.vlInput],\n      vlOutput: [this.product.vlOutput],\n    });\n  }\n\n  save() {\n    this.productSrvc.update(this.productForm.value).subscribe(\n      () => {\n        this.modalCtrl.dismiss();\n        this.spinnerSrvc.hide();\n        this.alertSrvc.toast(\"Produto atualizado com sucesso!\", 2000, \"top\");\n      },\n      (error) => {\n        this.spinnerSrvc.hide();\n      }\n    );\n  }\n  cancel() {\n    this.modalCtrl.dismiss();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AlertController, ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(public alertCtrl: AlertController,\n              public toastCtrl: ToastController) { }\n\nasync okAlert(header, message){\n  const alert = await this.alertCtrl.create({\n    header,\n    message,\n    buttons: [\n      {\n        text: \"Ok\",\n  //        cssClass: \"secondary\",\n        handler: blah => {\n        }\n      },\n    ]\n  });\n  await alert.present();\n}\n\n\n  async confirm(message, callback: any) {\n    const alert = await this.alertCtrl.create({\n      header: \"Excluir?\",\n      message,\n      buttons: [\n        {\n          text: \"Cancelar\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: blah => {\n            console.log(\"Confirm Cancel: blah\");\n          }\n        },\n        {\n          text: \"Ok\",\n          handler: () => {\n            callback();\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async toast(message: string, duration: number, position) {\n    const toast = await this.toastCtrl.create({\n      message: message,\n      duration: duration,\n      position: position    });\n    toast.present();\n  }\n}\n","import { configHelper } from './../../configurations/configHelper';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpService } from '../http-service/http.service';\nimport { forkJoin } from 'rxjs';\nimport { ProductModel } from '../../models/tbProductModel';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  url: string;\n  constructor(private http: HttpService, private htt2: HttpClient) {\n    this.url = `${configHelper.URL2}/product`;\n  }\n\n  updtaeProductData = new EventEmitter();\n\n  public getProducts(id: number): Observable<any> {\n    const product = this.http.get(`${this.url}/${id}`);\n    // const provider= this.http.get(`${configHelper.URL}/provider/${id}`);\n    return forkJoin([product]);\n    //this.http.get(`${this.url}/${id}`)\n  }\n\n  public deleteProduct(id: number): Observable<ProductModel> {\n    return this.http.delete(`${this.url}`, id);\n  }\n\n  public update(data: any): Observable<ProductModel> {\n    return this.http.put(`${this.url}/${data.idProduct}`, data);\n  }\n\n  public createProduct(data: any): Observable<ProductModel> {\n    return this.http.post(`${this.url}`, data);\n  }\n\n  public updateForSale(id, data): Observable<ProductModel> {\n    return this.http.put(`${this.url}/cancel-sale/${id}`, data);\n  }\n\n  public getScanCode(id, cdProduct): Observable<ProductModel> {\n    cdProduct = {\n      cdProduct: cdProduct,\n    };\n    return this.http.post(`${this.url}/cdProduct/${id}`, cdProduct);\n  }\n}\n","import { configHelper } from 'src/app/configurations/configHelper';\nimport { Injectable } from '@angular/core';\nimport { HttpService } from '../http-service/http.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProviderService {\n  url: string;\n  constructor(private http: HttpService) {\n    this.url = `${configHelper.URL2}/provider`;\n  }\n\n  public getProviders(id: number): Observable<any> {\n    return this.http.get(`${this.url}/${id}`);\n  }\n\n  public addProvider(data): Observable<any> {\n    return this.http.post(`${this.url}`, data);\n  }\n\n  public updateProvider(data): Observable<any> {\n    return this.http.put(`${this.url}/${data.idProvider}`, data);\n  }\n\n  public deleteProvider(id): Observable<any> {\n    return this.http.delete(`${this.url}`, id);\n  }\n}\n"]}