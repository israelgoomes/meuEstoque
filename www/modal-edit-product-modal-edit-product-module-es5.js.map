{"version":3,"sources":["webpack:///src/app/modal-edit-product/modal-edit-product-routing.module.ts","webpack:///src/app/modal-edit-product/modal-edit-product.module.ts","webpack:///src/app/services/product-service/product.service.ts"],"names":["routes","path","component","ModalEditProductPageRoutingModule","imports","forChild","exports","ModalEditProductPageModule","declarations","ProductService","http","updtaeProductData","url","URL","id","product","get","data","put","idProduct","post","cdProduct","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,iCAAiC;AAAA;AAAA,KAA9C;;AAAaA,qCAAiC,6DAJ7C,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAI6C,GAAjCH,iCAAiC,CAAjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmBb,QAAaI,0BAA0B;AAAA;AAAA,KAAvC;;AAAaA,8BAA0B,6DAjBtC,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,oEAJO,EAKP,sEALO,EAMP,8EANO,EAOP,wEAPO,EAQP,qEARO,EASP,yEATO,EAUP,gFAVO,EAWP,qEAXO,EAYP,oGAZO,CADD;AAeRI,kBAAY,EAAE;AAfN,KAAT,CAiBsC,GAA1BD,0BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1Bb,QAAaE,cAAc;AAEvB,8BAAoBC,IAApB,EAAuC;AAAA;;AAAnB,aAAAA,IAAA,GAAAA,IAAA;AAItB,aAAAC,iBAAA,GAAoB,IAAI,0DAAJ,EAApB;AAHI,aAAKC,GAAL,aAAc,0EAAaC,GAA3B;AACH;;AAJwB;AAAA;AAAA,oCAQNC,EARM,EAQI;AAC3B,cAAMC,OAAO,GAAG,KAAKL,IAAL,CAAUM,GAAV,WAAiB,KAAKJ,GAAtB,cAA6BE,EAA7B,EAAhB,CAD2B,CAE5B;;AACG,iBAAO,sDAAS,CAACC,OAAD,CAAT,CAAP,CAHyB,CAIzB;AACH;AAbwB;AAAA;AAAA,sCAeJD,EAfI,EAeM;AAC7B,iBAAO,KAAKJ,IAAL,qBAAoB,KAAKE,GAAzB,GAAgCE,EAAhC,CAAP;AACD;AAjBwB;AAAA;AAAA,+BAmBXG,IAnBW,EAmBF;AACrB,iBAAO,KAAKP,IAAL,CAAUQ,GAAV,WAAiB,KAAKN,GAAtB,cAA6BK,IAAI,CAACE,SAAlC,GAA+CF,IAA/C,CAAP;AACD;AArBwB;AAAA;AAAA,sCAuBJA,IAvBI,EAuBK;AAC5B,iBAAO,KAAKP,IAAL,CAAUU,IAAV,WAAkB,KAAKR,GAAvB,GAA8BK,IAA9B,CAAP;AACD;AAzBwB;AAAA;AAAA,sCA2BJH,EA3BI,EA2BAG,IA3BA,EA2BI;AAC3B,iBAAO,KAAKP,IAAL,CAAUQ,GAAV,WAAiB,KAAKN,GAAtB,0BAAyCE,EAAzC,GAA+CG,IAA/C,CAAP;AACD;AA7BwB;AAAA;AAAA,oCA+BNH,EA/BM,EA+BFO,SA/BE,EA+BO;AAC9BA,mBAAS,GAAG;AACVA,qBAAS,EAAEA;AADD,WAAZ;AAGA,iBAAO,KAAKX,IAAL,CAAUU,IAAV,WAAkB,KAAKR,GAAvB,wBAAwCE,EAAxC,GAA8CO,SAA9C,CAAP;AACD;AApCwB;;AAAA;AAAA,OAA3B;;;;cAE8B;;;;AAFjBZ,kBAAc,6DAH1B,iEAAW;AACVa,gBAAU,EAAE;AADF,KAAX,CAG0B,GAAdb,cAAc,CAAd","file":"modal-edit-product-modal-edit-product-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ModalEditProductPage } from './modal-edit-product.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ModalEditProductPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ModalEditProductPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ModalEditProductPageRoutingModule } from './modal-edit-product-routing.module';\n\nimport { ModalEditProductPage } from './modal-edit-product.page';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MatMenuModule,\n    MatInputModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatCardModule,\n    ModalEditProductPageRoutingModule\n  ],\n  declarations: []\n})\nexport class ModalEditProductPageModule {}\n","import { configHelper } from './../../configurations/configHelper';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport { HttpService } from '../http-service/http.service';\nimport { forkJoin } from 'rxjs';\nimport { ProductModel } from '../../models/tbProductModel';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n    url: string;\n    constructor(private http: HttpService) { \n      this.url = `${configHelper.URL}/product`;\n  }\n\n  updtaeProductData = new EventEmitter;\n\n  public getProducts(id: number): Observable<any>{\n    const product = this.http.get(`${this.url}/${id}`);\n   // const provider= this.http.get(`${configHelper.URL}/provider/${id}`);\n      return forkJoin([product]);\n      //this.http.get(`${this.url}/${id}`)\n  }\n\n  public deleteProduct(id: number): Observable<ProductModel> {\n    return this.http.delete(`${this.url}`, id);\n  }\n\n  public update(data: any): Observable<ProductModel>{\n    return this.http.put(`${this.url}/${data.idProduct}`, data);\n  }\n\n  public createProduct(data: any): Observable<ProductModel>{\n    return this.http.post(`${this.url}`, data);\n  }\n\n  public updateForSale(id, data): Observable<ProductModel>{\n    return this.http.put(`${this.url}/cancel-sale/${id}`, data);\n  }\n\n  public getScanCode(id, cdProduct): Observable<ProductModel>{\n    cdProduct = {\n      cdProduct: cdProduct\n    }\n    return this.http.post(`${this.url}/cdProduct/${id}`, cdProduct);\n  }\n\n}\n"]}