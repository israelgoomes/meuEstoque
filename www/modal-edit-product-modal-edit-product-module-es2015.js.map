{"version":3,"sources":["./src/app/modal-edit-product/modal-edit-product-routing.module.ts","./src/app/modal-edit-product/modal-edit-product.module.ts","./src/app/services/product-service/product.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACc;AAEU;AAEjE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6EAAoB;KAChC;CACF,CAAC;AAMF,IAAa,iCAAiC,GAA9C,MAAa,iCAAiC;CAAG;AAApC,iCAAiC;IAJ7C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,iCAAiC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBL;AACM;AACF;AAEA;AAE2C;AAGjC;AACE;AACQ;AACN;AACJ;AACI;AACO;AACX;AAmBvD,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;CAAG;AAA7B,0BAA0B;IAjBtC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,oEAAa;YACb,sEAAc;YACd,8EAAkB;YAClB,wEAAe;YACf,qEAAa;YACb,yEAAe;YACf,gFAAkB;YAClB,qEAAa;YACb,oGAAiC;SAClC;QACD,YAAY,EAAE,EAAE;KACjB,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;ACnC4B;AACV;AAEE;AAC3B;AAKhC,IAAa,cAAc,GAA3B,MAAa,cAAc;IAEvB,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAIvC,sBAAiB,GAAG,IAAI,0DAAY,CAAC;QAHjC,IAAI,CAAC,GAAG,GAAG,GAAG,yEAAY,CAAC,GAAG,UAAU,CAAC;IAC7C,CAAC;IAIM,WAAW,CAAC,EAAU;QAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC;QACpD,uEAAuE;QACpE,OAAO,qDAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAC3B,oCAAoC;IACxC,CAAC;IAEM,aAAa,CAAC,EAAU;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,CAAC;IAEM,MAAM,CAAC,IAAS;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC;IAEM,aAAa,CAAC,IAAS;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;IAEM,aAAa,CAAC,EAAE,EAAE,IAAI;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,gBAAgB,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC;IAEM,WAAW,CAAC,EAAE,EAAE,SAAS;QAC9B,SAAS,GAAG;YACV,SAAS,EAAE,SAAS;SACrB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,cAAc,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;IAClE,CAAC;CAEF;;YApC6B,sEAAW;;AAF5B,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAsC1B;AAtC0B","file":"modal-edit-product-modal-edit-product-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ModalEditProductPage } from './modal-edit-product.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ModalEditProductPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ModalEditProductPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ModalEditProductPageRoutingModule } from './modal-edit-product-routing.module';\n\nimport { ModalEditProductPage } from './modal-edit-product.page';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MatMenuModule,\n    MatInputModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatIconModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatCardModule,\n    ModalEditProductPageRoutingModule\n  ],\n  declarations: []\n})\nexport class ModalEditProductPageModule {}\n","import { configHelper } from './../../configurations/configHelper';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport { HttpService } from '../http-service/http.service';\nimport { forkJoin } from 'rxjs';\nimport { ProductModel } from '../../models/tbProductModel';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n    url: string;\n    constructor(private http: HttpService) { \n      this.url = `${configHelper.URL}/product`;\n  }\n\n  updtaeProductData = new EventEmitter;\n\n  public getProducts(id: number): Observable<any>{\n    const product = this.http.get(`${this.url}/${id}`);\n   // const provider= this.http.get(`${configHelper.URL}/provider/${id}`);\n      return forkJoin([product]);\n      //this.http.get(`${this.url}/${id}`)\n  }\n\n  public deleteProduct(id: number): Observable<ProductModel> {\n    return this.http.delete(`${this.url}`, id);\n  }\n\n  public update(data: any): Observable<ProductModel>{\n    return this.http.put(`${this.url}/${data.idProduct}`, data);\n  }\n\n  public createProduct(data: any): Observable<ProductModel>{\n    return this.http.post(`${this.url}`, data);\n  }\n\n  public updateForSale(id, data): Observable<ProductModel>{\n    return this.http.put(`${this.url}/cancel-sale/${id}`, data);\n  }\n\n  public getScanCode(id, cdProduct): Observable<ProductModel>{\n    cdProduct = {\n      cdProduct: cdProduct\n    }\n    return this.http.post(`${this.url}/cdProduct/${id}`, cdProduct);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}