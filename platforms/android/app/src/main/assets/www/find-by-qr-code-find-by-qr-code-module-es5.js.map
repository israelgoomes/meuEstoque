{"version":3,"sources":["webpack:///src/app/find-by-qr-code/find-by-qr-code-routing.module.ts","webpack:///src/app/find-by-qr-code/find-by-qr-code.module.ts","webpack:///src/app/services/product-service/product.service.ts"],"names":["routes","path","component","FindByQrCodePageRoutingModule","imports","forChild","exports","FindByQrCodePageModule","declarations","ProductService","http","htt2","updtaeProductData","url","URL2","id","product","get","data","put","idProduct","post","cdProduct","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,6BAA6B;AAAA;AAAA,KAA1C;;AAAaA,iCAA6B,6DAJzC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIyC,GAA7BH,6BAA6B,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAaI,sBAAsB;AAAA;AAAA,KAAnC;;AAAaA,0BAAsB,6DATlC,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6FAJO,CADD;AAORI,kBAAY,EAAE;AAPN,KAAT,CASkC,GAAtBD,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTb,QAAaE,cAAc;AAEzB,8BAAoBC,IAApB,EAA+CC,IAA/C,EAAiE;AAAA;;AAA7C,aAAAD,IAAA,GAAAA,IAAA;AAA2B,aAAAC,IAAA,GAAAA,IAAA;AAI/C,aAAAC,iBAAA,GAAoB,IAAI,0DAAJ,EAApB;AAHE,aAAKC,GAAL,aAAc,0EAAaC,IAA3B;AACD;;AAJwB;AAAA;AAAA,oCAQNC,EARM,EAQI;AAC3B,cAAMC,OAAO,GAAG,KAAKN,IAAL,CAAUO,GAAV,WAAiB,KAAKJ,GAAtB,cAA6BE,EAA7B,EAAhB,CAD2B,CAE3B;;AACA,iBAAO,sDAAS,CAACC,OAAD,CAAT,CAAP,CAH2B,CAI3B;AACD;AAbwB;AAAA;AAAA,sCAeJD,EAfI,EAeM;AAC7B,iBAAO,KAAKL,IAAL,qBAAoB,KAAKG,GAAzB,GAAgCE,EAAhC,CAAP;AACD;AAjBwB;AAAA;AAAA,+BAmBXG,IAnBW,EAmBF;AACrB,iBAAO,KAAKR,IAAL,CAAUS,GAAV,WAAiB,KAAKN,GAAtB,cAA6BK,IAAI,CAACE,SAAlC,GAA+CF,IAA/C,CAAP;AACD;AArBwB;AAAA;AAAA,sCAuBJA,IAvBI,EAuBK;AAC5B,iBAAO,KAAKR,IAAL,CAAUW,IAAV,WAAkB,KAAKR,GAAvB,GAA8BK,IAA9B,CAAP;AACD;AAzBwB;AAAA;AAAA,sCA2BJH,EA3BI,EA2BAG,IA3BA,EA2BI;AAC3B,iBAAO,KAAKR,IAAL,CAAUS,GAAV,WAAiB,KAAKN,GAAtB,0BAAyCE,EAAzC,GAA+CG,IAA/C,CAAP;AACD;AA7BwB;AAAA;AAAA,oCA+BNH,EA/BM,EA+BFO,SA/BE,EA+BO;AAC9BA,mBAAS,GAAG;AACVA,qBAAS,EAAEA;AADD,WAAZ;AAGA,iBAAO,KAAKZ,IAAL,CAAUW,IAAV,WAAkB,KAAKR,GAAvB,wBAAwCE,EAAxC,GAA8CO,SAA9C,CAAP;AACD;AApCwB;;AAAA;AAAA,OAA3B;;;;cAE4B;;cAA2B;;;;AAF1Cb,kBAAc,6DAH1B,iEAAW;AACVc,gBAAU,EAAE;AADF,KAAX,CAG0B,GAAdd,cAAc,CAAd","file":"find-by-qr-code-find-by-qr-code-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FindByQrCodePage } from './find-by-qr-code.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FindByQrCodePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FindByQrCodePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FindByQrCodePageRoutingModule } from './find-by-qr-code-routing.module';\n\nimport { FindByQrCodePage } from './find-by-qr-code.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FindByQrCodePageRoutingModule\n  ],\n  declarations: []\n})\nexport class FindByQrCodePageModule {}\n","import { configHelper } from './../../configurations/configHelper';\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpService } from '../http-service/http.service';\nimport { forkJoin } from 'rxjs';\nimport { ProductModel } from '../../models/tbProductModel';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  url: string;\n  constructor(private http: HttpService, private htt2: HttpClient) {\n    this.url = `${configHelper.URL2}/product`;\n  }\n\n  updtaeProductData = new EventEmitter();\n\n  public getProducts(id: number): Observable<any> {\n    const product = this.http.get(`${this.url}/${id}`);\n    // const provider= this.http.get(`${configHelper.URL}/provider/${id}`);\n    return forkJoin([product]);\n    //this.http.get(`${this.url}/${id}`)\n  }\n\n  public deleteProduct(id: number): Observable<ProductModel> {\n    return this.http.delete(`${this.url}`, id);\n  }\n\n  public update(data: any): Observable<ProductModel> {\n    return this.http.put(`${this.url}/${data.idProduct}`, data);\n  }\n\n  public createProduct(data: any): Observable<ProductModel> {\n    return this.http.post(`${this.url}`, data);\n  }\n\n  public updateForSale(id, data): Observable<ProductModel> {\n    return this.http.put(`${this.url}/cancel-sale/${id}`, data);\n  }\n\n  public getScanCode(id, cdProduct): Observable<ProductModel> {\n    cdProduct = {\n      cdProduct: cdProduct,\n    };\n    return this.http.post(`${this.url}/cdProduct/${id}`, cdProduct);\n  }\n}\n"]}