{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts","webpack:///src/app/services/alert-service/alert-service.service.ts","webpack:///src/app/services/http-service/http.service.ts","webpack:///src/app/services/login-service/login.service.ts","webpack:///src/app/services/spinner-service/spinner.service.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","menuCtrl","loginSrvc","route","spinnerSrvc","alertSrvc","enable","localStorage","getItem","storageKeys","token","console","log","navigate","f","value","cnpjCpf","authenticate","password","subscribe","data","registerLogin","registerUser","JSON","stringify","usuario","hide","toast","error","message","okAlert","selector","template","AlertService","alertCtrl","toastCtrl","header","create","buttons","text","handler","blah","alert","present","callback","role","cssClass","duration","position","providedIn","HttpService","httpClient","append","getAcessToken","url","createHeader","show","get","headers","put","post","id","LoginService","http","URL","result","setItem","user","SpinnerService","loading","isLoading","spinner","then","a","dismiss"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"\\n\\n<ion-content>\\n\\n\\n  <ion-card>\\n    <ion-card-header>\\n     <h2>Login</h2> \\n     <mat-divider></mat-divider>\\n\\n    </ion-card-header>\\n\\n    <ion-card-content>\\n      <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"login(f)\\\" novalidate>\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <mat-label>CNPJ/CPF</mat-label>\\n        <input type=\\\"number\\\" name=\\\"cnpjCpf\\\" ngModel matInput placeholder=\\\"Placeholder\\\">\\n        <mat-icon matSuffix>assignment_ind</mat-icon>\\n        <mat-hint></mat-hint>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\">\\n        <mat-label>Password</mat-label>\\n        <input name=\\\"password\\\" ngModel type=\\\"password\\\" matInput placeholder=\\\"Placeholder\\\">\\n        <mat-icon matSuffix>vpn_key</mat-icon>\\n        <mat-hint></mat-hint>\\n      </mat-form-field>\\n      <mat-checkbox style=\\\"float: left;\\\">Manter-me conectado.</mat-checkbox>\\n      <br>\\n      <button mat-raised-button type=\\\"submit\\\" style=\\\"border: 1px solid #62462B; width: 100%;\\\">Logar</button>\\n\\n    </form>\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { MatInputModule} from '@angular/material/input';\nimport {MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatCheckboxModule} from '@angular/material/checkbox';\nimport { MatDividerModule} from '@angular/material/divider';\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatButtonModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatDividerModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"ion-content {\\n  --ion-background-color: #62462B;\\n}\\n\\nion-card-header, ion-card-content {\\n  background-color: white;\\n}\\n\\nion-card-header {\\n  text-align: center;\\n}\\n\\nion-card-content {\\n  text-align: center;\\n}\\n\\nion-card {\\n  max-width: 200px;\\n  margin: 15% auto;\\n  text-align: center;\\n  max-width: 1024px;\\n  background-color: white;\\n  width: 400px;\\n  height: 400px;\\n}\\n\\nmat-form-field {\\n  width: 100%;\\n}\\n\\nmat-form-field-outline ng-tns-c2-0 ng-star-inserted {\\n  border: 1px solid red;\\n}\\n\\nmat-icon {\\n  color: #62462B;\\n}\\n\\nmat-divider {\\n  color: #62462B;\\n  background-color: #62462B;\\n}\\n\\nmat-checkbox {\\n  margin-bottom: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vQzpcXFVzZXJzXFxsc3JhZWxcXERlc2t0b3BcXGVzdG9xdWVcXGltQXBwL3NyY1xcYXBwXFxsb2dpblxcbG9naW4ucGFnZS5zY3NzIiwic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwrQkFBQTtBQ0NKOztBREVBO0VBQ0ksdUJBQUE7QUNDSjs7QURFQTtFQUNBLGtCQUFBO0FDQ0E7O0FER0E7RUFDSSxrQkFBQTtBQ0FKOztBREdBO0VBQ0ksZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0FDQUo7O0FERUE7RUFDSSxXQUFBO0FDQ0o7O0FERUE7RUFDSSxxQkFBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtBQ0NKOztBREVBO0VBQ0ksY0FBQTtFQUNBLHlCQUFBO0FDQ0o7O0FERUE7RUFDSSxrQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnR7XHJcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjNjI0NjJCO1xyXG59XHJcblxyXG5pb24tY2FyZC1oZWFkZXIsIGlvbi1jYXJkLWNvbnRlbnR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuaW9uLWNhcmQtaGVhZGVye1xyXG50ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcblxyXG5pb24tY2FyZC1jb250ZW50e1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5pb24tY2FyZHtcclxuICAgIG1heC13aWR0aDogMjAwcHg7XHJcbiAgICBtYXJnaW46IDE1JSBhdXRvO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyOztcclxuICAgIG1heC13aWR0aDogMTAyNHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBoZWlnaHQ6IDQwMHB4O1xyXG59XHJcbm1hdC1mb3JtLWZpZWxke1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbm1hdC1mb3JtLWZpZWxkLW91dGxpbmUgbmctdG5zLWMyLTAgbmctc3Rhci1pbnNlcnRlZHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcclxufVxyXG5cclxubWF0LWljb257XHJcbiAgICBjb2xvcjogIzYyNDYyQjtcclxufVxyXG5cclxubWF0LWRpdmlkZXJ7XHJcbiAgICBjb2xvcjogIzYyNDYyQjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM2MjQ2MkI7XHJcbn1cclxuXHJcbm1hdC1jaGVja2JveHtcclxuICAgIG1hcmdpbi1ib3R0b206IDA1cHg7XHJcbn1cclxuIiwiaW9uLWNvbnRlbnQge1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjNjI0NjJCO1xufVxuXG5pb24tY2FyZC1oZWFkZXIsIGlvbi1jYXJkLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn1cblxuaW9uLWNhcmQtaGVhZGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5pb24tY2FyZC1jb250ZW50IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5pb24tY2FyZCB7XG4gIG1heC13aWR0aDogMjAwcHg7XG4gIG1hcmdpbjogMTUlIGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWF4LXdpZHRoOiAxMDI0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICB3aWR0aDogNDAwcHg7XG4gIGhlaWdodDogNDAwcHg7XG59XG5cbm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbm1hdC1mb3JtLWZpZWxkLW91dGxpbmUgbmctdG5zLWMyLTAgbmctc3Rhci1pbnNlcnRlZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbn1cblxubWF0LWljb24ge1xuICBjb2xvcjogIzYyNDYyQjtcbn1cblxubWF0LWRpdmlkZXIge1xuICBjb2xvcjogIzYyNDYyQjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzYyNDYyQjtcbn1cblxubWF0LWNoZWNrYm94IHtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { configHelper } from '../configurations/configHelper';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../services/login-service/login.service';\nimport { MenuController } from '@ionic/angular';\nimport { SpinnerService } from '../services/spinner-service/spinner.service';\nimport { AlertService } from '../services/alert-service/alert-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  \n  constructor(private menuCtrl: MenuController,\n    private loginSrvc: LoginService,\n    private route: Router,\n    private spinnerSrvc: SpinnerService,\n    private alertSrvc: AlertService) { }\n\nngOnInit() {\nthis.menuCtrl.enable(false);\nif(localStorage.getItem(configHelper.storageKeys.token)) {\n  console.log('Token carregado')\nthis.route.navigate(['/products']);\n}\n}\n\nlogin(f: NgForm){\nconsole.log(f.value.cnpjCpf)\nthis.loginSrvc.authenticate(f.value.cnpjCpf, f.value.password).subscribe(data=>{\nconsole.log('token enviado', data.token)\nthis.loginSrvc.registerLogin(data.token);\nthis.loginSrvc.registerUser(JSON.stringify(data.usuario));\nthis.spinnerSrvc.hide();\nthis.route.navigate(['/products'])\nthis.alertSrvc.toast(\"Login efetuado com sucesso!\", 2000 ,'top')\n}, error =>{\nconsole.log('erro', error.error.message)\nconsole.log('erro orig', error)\nthis.spinnerSrvc.hide();\nthis.alertSrvc.okAlert(\"Erro ao efetuar login\" ,error.error.message);\n});\n}\n}\n","import { Injectable } from '@angular/core';\nimport { AlertController, ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(public alertCtrl: AlertController,\n              public toastCtrl: ToastController) { }\n\nasync okAlert(header, message){\n  const alert = await this.alertCtrl.create({\n    header,\n    message,\n    buttons: [\n      {\n        text: \"Ok\",\n  //        cssClass: \"secondary\",\n        handler: blah => {\n        }\n      },\n    ]\n  });\n  await alert.present();\n}\n\n\n  async confirm(message, callback: any) {\n    const alert = await this.alertCtrl.create({\n      header: \"Excluir?\",\n      message,\n      buttons: [\n        {\n          text: \"Cancelar\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: blah => {\n            console.log(\"Confirm Cancel: blah\");\n          }\n        },\n        {\n          text: \"Ok\",\n          handler: () => {\n            callback();\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async toast(message: string, duration: number, position) {\n    const toast = await this.toastCtrl.create({\n      message: message,\n      duration: duration,\n      position: position    });\n    toast.present();\n  }\n}\n","import { configHelper } from 'src/app/configurations/configHelper';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { SpinnerService } from '../spinner-service/spinner.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    private spinnerSrvc: SpinnerService\r\n  ) {}\r\n\r\n  public createHeader(header?: HttpHeaders): HttpHeaders {\r\n    if (!header) {\r\n      header = new HttpHeaders();\r\n    }\r\n\r\n    header = header.append('Content-type', 'application/json');\r\n    header = header.append('accept', 'application/json');\r\n\r\n    const token = HttpService.getAcessToken;\r\n    if (token) {\r\n      header = header.append('user-token', token);\r\n    }\r\n    return header;\r\n  }\r\n\r\n  public get(url): Observable<any> {\r\n    const header = this.createHeader();\r\n    this.spinnerSrvc.show();\r\n    return this.httpClient.get(url, { headers: header });\r\n  }\r\n\r\n  public put(url, data): Observable<any> {\r\n    const header = this.createHeader();\r\n    this.spinnerSrvc.show();\r\n    return this.httpClient.put(url, data, { headers: header });\r\n  }\r\n\r\n  public post(url, data): Observable<any> {\r\n    const header = this.createHeader();\r\n    this.spinnerSrvc.show();\r\n    return this.httpClient.post(url, data, { headers: header });\r\n  }\r\n\r\n  public delete(url, id): Observable<any> {\r\n    const header = this.createHeader();\r\n    this.spinnerSrvc.show();\r\n    return this.httpClient.delete(`${url}/${id}`, { headers: header });\r\n  }\r\n  static get getAcessToken(): string {\r\n    return localStorage.getItem(configHelper.storageKeys.token);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { configHelper } from 'src/app/configurations/configHelper';\nimport { HttpService } from '../http-service/http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  url: string;\n  constructor(private http: HttpService) { \n    this.url = `${configHelper.URL}`;\n  }\n\n  authenticate(cnpjCpf, password): Observable<any> {\n    return this.http.post(\n      `${this.url}/company/autenticar`,\n      { cnpjCpf, password },\n    );\n  }\n\n  registerLogin(result) {\n    localStorage.setItem(configHelper.storageKeys.token, result);\n  }\n\n  registerUser(result){\n    localStorage.setItem(configHelper.storageKeys.user, result);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpinnerService {\n  isLoading = false;\n  constructor(public loading: LoadingController) { }\n\n  async show() {\n    this.isLoading = true;\n    return await this.loading.create({\n      message: 'Carregando ...',\n      spinner: 'circles' \n    }).then(a => {\n      a.present().then(() => {\n        if (!this.isLoading) {\n          a.dismiss().then(() => console.log('abort laoding'));\n        }\n      });\n    });\n  }\n\n  async hide() {\n    this.isLoading = false;\n    return await this.loading.dismiss().then(() => console.log('loading dismissed'));\n  }\n}\n\n"]}