{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/collections.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/overlay.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/portal.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/expansion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///src/app/services/alert-service/alert-service.service.ts"],"names":["nextId","CdkAccordion","_stateChanges","_openCloseAllActions","id","_multi","_openCloseAll","changes","next","complete","expanded","multi","ɵfac","CdkAccordion_Factory","t","ɵdir","type","selectors","inputs","exportAs","features","propDecorators","args","selector","nextId$1","ɵ0","undefined","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_openCloseAllSubscription","EMPTY","closed","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","_subscribeToOpenCloseAllActions","emit","unsubscribe","disabled","subscribe","notify","markForCheck","CdkAccordionItem_Factory","outputs","provide","useValue","ctorParameters","decorators","providers","CdkAccordionModule","ɵmod","ɵinj","factory","CdkAccordionModule_Factory","ngJitMode","declarations","exports","DataSource","isDataSource","value","connect","ArrayDataSource","_data","CollectionViewer","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","length","forEach","_markSelected","values","_verifyValueAssignment","_emitChangeEvent","_unmarkSelected","isSelected","deselect","select","_unmarkAll","has","size","isEmpty","predicate","selected","_selected","sort","source","added","removed","add","push","getMultipleValuesInSingleSelectionError","Array","from","SelectionChange","Error","UniqueSelectionDispatcher","_listeners","name","listener","filter","registered","UniqueSelectionDispatcher_Factory","ɵprov","token","providedIn","TreeDataNodeFlattener","BlockScrollStrategy","_viewportRuler","document","_previousHTMLStyles","top","left","_isEnabled","_document","_canBeEnabled","root","documentElement","_previousScrollPosition","getViewportScrollPosition","style","classList","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","remove","window","scroll","contains","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","ScrollStrategy","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategyConfig","CloseScrollStrategy","_scrollDispatcher","_ngZone","_config","_scrollSubscription","_detach","disable","_overlayRef","hasAttached","run","detach","overlayRef","stream","scrolled","threshold","_initialScrollPosition","scrollPosition","Math","abs","updatePosition","NoopScrollStrategy","isElementScrolledOutsideView","element","scrollContainers","some","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategyConfig","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","close","config","block","reposition","ScrollStrategyOptions_Factory","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","keys","key","OriginConnectionPosition","OverlayConnectionPosition","ConnectionPositionPair","origin","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","OverlayKeyboardDispatcher","_attachedOverlays","_keydownListener","event","overlays","i","_keydownEvents","observers","_isAttached","addEventListener","index","indexOf","splice","removeEventListener","OverlayKeyboardDispatcher_Factory","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY","dispatcher","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER","deps","useFactory","isTestEnvironment","__karma__","jasmine","OverlayContainer","_platform","container","_containerElement","parentNode","removeChild","_createContainer","isBrowser","containerClass","oppositePlatformContainers","querySelectorAll","createElement","setAttribute","appendChild","OverlayContainer_Factory","OVERLAY_CONTAINER_PROVIDER_FACTORY","parentContainer","OVERLAY_CONTAINER_PROVIDER","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","_backdropClickHandler","_scrollStrategy","attach","_positionStrategy","positionStrategy","portal","attachResult","parentElement","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","enable","onStable","asObservable","pipe","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","apply","strategy","sizeConfig","assign","dir","direction","classes","getDirection","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","insertBefore","requestAnimationFrame","runOutsideAngular","nextSibling","backdropToDetach","timeoutId","finishDetach","clearTimeout","setTimeout","cssClasses","isAdd","cssClass","subscription","children","OverlaySizeConfig","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","hostElement","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","change","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","scrollables","positions","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","_origin","offset","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","getConfig","verticalFit","horizontalFit","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","_pushOverlayOnScreen","virtualKeyboardOffset","getContainerElement","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","scrollable","getElementRef","nativeElement","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","pair","Element","Point","OverlayFit","FallbackPosition","BoundingBoxRect","FlexibleFit","ConnectedPosition","destination","hasOwnProperty","input","split","units","parseFloat","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","platform","overlayContainer","withFlexibleDimensions","withPush","withViewportMargin","withFallbackPosition","_direction","setDirection","withScrollableContainers","withPositions","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","slice","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","updateSize","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","elementRef","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","host","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","_appRef","get","Overlay_Factory","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY","CdkOverlayOrigin","CdkOverlayOrigin_Factory","CdkConnectedOverlay","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_dir","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","viewportMargin","open","backdropClick","positionChange","overlayKeydown","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","_attachOverlay","_detachOverlay","create","_buildConfig","keydownEvents","keyCode","preventDefault","_createPositionStrategy","currentPosition","withGrowAfterOpen","lockPosition","withTransformOriginOn","transformOriginSelector","flexibleConnectedTo","p","_createOverlay","CdkConnectedOverlay_Factory","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","OverlayModule","OverlayModule_Factory","imports","OVERLAY_PROVIDERS","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","fn","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","ComponentType","Portal","_attachedHost","ComponentPortal","component","injector","componentFactoryResolver","TemplatePortal","template","context","DomPortal","PortalOutlet","BasePortalOutlet","attachDomPortal","_attachedPortal","attachComponentPortal","attachTemplatePortal","setAttachedHost","_invokeDisposeFn","_disposeFn","BasePortalHost","DomPortalOutlet","outletElement","_defaultInjector","anchorNode","createComment","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","setDisposeFn","destroy","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","detectChanges","rootNodes","rootNode","DomPortalHost","CdkPortal","CdkPortal_Factory","TemplatePortalDirective","TemplatePortalDirective_Factory","ɵTemplatePortalDirective_BaseFactory","useExisting","CdkPortalOutlet","_viewContainerRef","_isInitialized","attached","_getRootNode","_attachedRef","ref","clear","nodeType","ELEMENT_NODE","CdkPortalOutlet_Factory","PortalHostDirective","PortalHostDirective_Factory","ɵPortalHostDirective_BaseFactory","PortalModule","PortalModule_Factory","PortalInjector","_parentInjector","_customTokens","notFoundValue","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","VirtualScrollStrategy","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","_updateTotalContentSize","_updateRenderedRange","behavior","scrollToOffset","setTotalContentSize","getDataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","renderedRange","getRenderedRange","newRange","end","viewportSize","dataLength","startBuffer","expandStart","ceil","endBuffer","expandEnd","floor","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","updateItemAndBufferSize","CdkFixedSizeVirtualScroll_Factory","DEFAULT_SCROLL_TIME","ScrollDispatcher","_scrolled","_globalSubscription","_scrolledCount","Map","set","elementScrolled","scrollableReference","auditTimeInMs","observer","_addGlobalListener","_removeGlobalListener","_","deregister","ancestors","getAncestorScrollContainers","target","scrollingContainers","_subscription","_scrollableContainsElement","doc","_getDocument","defaultView","scrollableElement","_getWindow","ScrollDispatcher_Factory","CdkScrollable","scrollDispatcher","ngZone","_destroyed","_elementScrolled","register","options","el","_applyScrollToOptions","scrollTo","scrollTop","scrollLeft","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","ViewportScrollPosition","ViewportRuler","_change","_invalidateCache","_updateViewportSize","_viewportSize","output","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_detachedSubject","_renderedRangeSubject","_orientation","Promise","resolve","then","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","_measureViewportSize","onContentScrolled","_markChangeDetectionNeeded","forOf","_forOf","dataStream","data","newLength","onDataLengthChanged","_doChangeDetection","_calculateSpacerSize","range","onContentRendered","to","isHorizontal","orientation","axisDirection","Number","_renderedContentTransform","measureRenderedContentSize","onRenderedOffsetChanged","scrollToIndex","contentEl","_contentWrapper","offsetWidth","offsetHeight","measureRangeSize","viewportEl","runAfter","runAfterChangeDetection","CdkVirtualScrollViewport_Factory","ɵcmp","viewQuery","CdkVirtualScrollViewport_Query","rf","ctx","_t","first","hostAttrs","hostVars","hostBindings","CdkVirtualScrollViewport_HostBindings","ngContentSelectors","decls","vars","consts","CdkVirtualScrollViewport_Template","encapsulation","changeDetection","None","OnPush","getSize","node","rect","CdkVirtualForOf","_template","_differs","viewChange","_dataSourceChanges","cdkVirtualForTemplateCacheSize","prev","cur","_changeDataSource","_differ","_templateCache","_needsUpdate","_onRenderedDataChange","renderedStartIndex","rangeLen","totalSize","view","j","diff","_renderedItems","_updateContext","_applyChanges","find","cdkVirtualForTrackBy","oldDs","newDs","disconnect","count","_updateComputedContextProperties","forEachOperation","record","adjustedPreviousIndex","currentIndex","previousIndex","_insertViewForNewItem","$implicit","item","_cacheView","_detachView","move","forEachIdentityChange","_insertViewFromCache","_createEmbeddedViewAt","last","even","odd","cdkVirtualForOf","_cdkVirtualForOf","cachedView","pop","insert","prototype","call","_cdkVirtualForTrackBy","CdkVirtualForOf_Factory","cdkVirtualForTemplate","CdkScrollableModule","CdkScrollableModule_Factory","ScrollingModule","ScrollingModule_Factory","MatExpansionPanel_ng_template_5_Template","_c2","_c3","a0","a1","collapsedHeight","expandedHeight","_c4","params","MatExpansionPanelHeader_span_4_Template","ctx_r0","_getExpandedState","_c5","_c6","MatAccordionBase","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","expansionHeaderHeight","optional","bodyExpansion","visibility","MatExpansionPanelContent","MatExpansionPanelContent_Factory","uniqueId","MatExpansionPanelDefaultOptions","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","_uniqueSelectionDispatcher","_animationMode","defaultOptions","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","fromState","toState","hideToggle","displayMode","_lazyContent","_portal","_body","focusedElement","activeElement","bodyElement","_togglePosition","togglePosition","MatExpansionPanel_Factory","contentQueries","MatExpansionPanel_ContentQueries","dirIndex","MatExpansionPanel_Query","MatExpansionPanel_HostBindings","_hasSpacing","MatExpansionPanel_Template","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","$event","directives","animation","String","animations","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","MatExpansionPanelHeader","panel","_element","_focusMonitor","_parentChangeSubscription","_animationsDisabled","accordionHideToggleChange","_containsFocus","focusVia","monitor","_handleHeaderFocus","toggle","_toggle","_handleHeaderKeydown","stopMonitoring","MatExpansionPanelHeader_Factory","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_animation_expansionHeight_start_HostBindingHandler","_animationStarted","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","_keydown","_getPanelId","_isExpanded","_getTogglePosition","MatExpansionPanelHeader_Template","_showToggle","MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatAccordion","arguments","_ownHeaders","_headers","headers","reset","header","notifyOnChanges","_keyManager","withWrap","manager","setFirstItemActive","setLastItemActive","onKeydown","updateActiveItem","show","MatAccordion_Factory","ɵMatAccordion_BaseFactory","MatAccordion_ContentQueries","MatAccordion_HostBindings","descendants","MatExpansionModule","MatExpansionModule_Factory","MatSelect_span_4_Template","ctx_r2","placeholder","MatSelect_span_5_span_1_Template","ctx_r5","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","ctx_r3","customTrigger","MatSelect_ng_template_8_Template","_r9","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","ctx_r8","_panelDoneAnimatingStream","MatSelect_ng_template_8_Template_div_keydown_1_listener","ctx_r10","_handleKeydown","ctx_r4","_getPanelTheme","_transformOrigin","_triggerFontSize","multiple","matSelectAnimations","transformPanelWrap","transformPanel","opacity","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MatSelectConfig","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","MatSelectBase","_elementRef","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatSelectMixinBase","MatSelectTrigger","MatSelectTrigger_Factory","MatSelect","_parentFormField","tabIndex","_liveAnnouncer","defaults","_panelOpen","_required","_scrollTop","_compareWith","o1","o2","_uid","_destroy","_onChange","_onTouched","_optionIds","_positions","_disableOptionCentering","_focused","controlType","ariaLabel","optionSelectionChanges","option","onSelectionChange","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","parseInt","disableOptionCentering","typeaheadDebounceInterval","_selectionModel","stateChanges","panelOpen","overlayDir","_triggerRect","trigger","_initKeyManager","_resetOptions","_initializeSelection","updateErrorState","withTypeAhead","_typeaheadDebounceInterval","getComputedStyle","fontSize","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","_setSelectionByValue","isDisabled","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","isTyping","altKey","previouslySelectedOption","selectedOption","announce","viewValue","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","_calculateOverlayOffsetX","color","_value","isArray","_selectValue","_sortValues","correspondingOption","setActiveItem","error","console","warn","withVerticalOrientation","withAllowedModifierKeys","tabOut","focus","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_setOptionIds","wasSelected","_propagateChanges","toArray","a","b","sortComparator","fallbackValue","valueToEmit","join","empty","activeOptionIndex","labelCount","optionGroups","_getItemHeight","result","current","itemHeight","items","_getItemCount","panelHeight","scrollContainerHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","selectedIndex","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","ariaLabelledby","_hasFloatingLabel","_getAriaLabel","_labelId","paddingWidth","group","round","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","ids","_ariaDescribedby","_placeholder","newValue","writeValue","_id","selectedOptions","reverse","MatSelect_Factory","MatSelect_ContentQueries","MatSelect_Query","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","_onFocus","MatSelect_blur_HostBindingHandler","_onBlur","_getAriaLabelledby","required","toString","errorState","_getAriaActiveDescendant","disableRipple","compareWith","errorStateMatcher","MatSelect_Template","MatSelect_Template_div_click_0_listener","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","_r0","MatSelectModule","MatSelectModule_Factory","AlertService","alertCtrl","toastCtrl","message","buttons","text","handler","blah","alert","present","callback","role","log","duration","toast"],"mappings":"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","file":"default~modal-edit-product-modal-edit-product-module~products-products-module~provider-provider-modu~de20de90-es5.js","sourcesContent":["import { Directive, Input, EventEmitter, Optional, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /**\n         * Emits when the state of the accordion changes\n         */\n        this._stateChanges = new Subject();\n        /**\n         * Stream that emits true/false when openAll/closeAll is triggered.\n         */\n        this._openCloseAllActions = new Subject();\n        /**\n         * A readonly id value to use for unique selection coordination.\n         */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /**\n     * Whether the accordion should allow multiple expanded accordion items simultaneously.\n     * @return {?}\n     */\n    get multi() { return this._multi; }\n    /**\n     * @param {?} multi\n     * @return {?}\n     */\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /**\n     * Opens all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    openAll() {\n        this._openCloseAll(true);\n    }\n    /**\n     * Closes all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    closeAll() {\n        this._openCloseAll(false);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @private\n     * @param {?} expanded\n     * @return {?}\n     */\n    _openCloseAll(expanded) {\n        if (this.multi) {\n            this._openCloseAllActions.next(expanded);\n        }\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion'\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkAccordion.ngAcceptInputType_multi;\n    /**\n     * Emits when the state of the accordion changes\n     * @type {?}\n     */\n    CdkAccordion.prototype._stateChanges;\n    /**\n     * Stream that emits true/false when openAll/closeAll is triggered.\n     * @type {?}\n     */\n    CdkAccordion.prototype._openCloseAllActions;\n    /**\n     * A readonly id value to use for unique selection coordination.\n     * @type {?}\n     */\n    CdkAccordion.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordion.prototype._multi;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion-item.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion item.\n * @type {?}\n */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _expansionDispatcher\n     */\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /**\n         * Subscription to openAll/closeAll events.\n         */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /**\n         * Event emitted every time the AccordionItem is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted every time the AccordionItem is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event emitted when the AccordionItem is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * \\@docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /**\n         * The unique AccordionItem id.\n         */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /**\n         * Unregister function for _expansionDispatcher.\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} accordionId\n             * @return {?}\n             */\n            (id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            }));\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /**\n     * Whether the AccordionItem is expanded.\n     * @return {?}\n     */\n    get expanded() { return this._expanded; }\n    /**\n     * @param {?} expanded\n     * @return {?}\n     */\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 * @type {?}\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the AccordionItem is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /**\n     * Emits an event for the accordion item being destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /**\n     * Toggles the expanded state of the accordion item.\n     * @return {?}\n     */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to false.\n     * @return {?}\n     */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to true.\n     * @return {?}\n     */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe((/**\n         * @param {?} expanded\n         * @return {?}\n         */\n        expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        }));\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CdkAccordion, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n            // to the same accordion.\n            { provide: CdkAccordion, useValue: ɵ0 },\n        ])] });\n/** @nocollapse */\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n                    // to the same accordion.\n                    { provide: CdkAccordion, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkAccordionItem.ngAcceptInputType_expanded;\n    /** @type {?} */\n    CdkAccordionItem.ngAcceptInputType_disabled;\n    /**\n     * Subscription to openAll/closeAll events.\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._openCloseAllSubscription;\n    /**\n     * Event emitted every time the AccordionItem is closed.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.closed;\n    /**\n     * Event emitted every time the AccordionItem is opened.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.opened;\n    /**\n     * Event emitted when the AccordionItem is destroyed.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.destroyed;\n    /**\n     * Emits whenever the expanded state of the accordion changes.\n     * Primarily used to facilitate two-way binding.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.expandedChange;\n    /**\n     * The unique AccordionItem id.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._disabled;\n    /**\n     * Unregister function for _expansionDispatcher.\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._removeUniqueSelectionListener;\n    /** @type {?} */\n    CdkAccordionItem.prototype.accordion;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkAccordionItem.prototype._expansionDispatcher;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion,\n        CdkAccordionItem], exports: [CdkAccordion,\n        CdkAccordionItem] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n\n//# sourceMappingURL=accordion.js.map","import { isObservable, of, Subject } from 'rxjs';\nimport { Injectable, ɵɵdefineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DataSource {\n}\nif (false) {\n    /**\n     * Connects a collection viewer (such as a data-table) to this data source. Note that\n     * the stream provided will be accessed during change detection and should not directly change\n     * values that are bound in template views.\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?} Observable that emits a new value when the data changes.\n     */\n    DataSource.prototype.connect = function (collectionViewer) { };\n    /**\n     * Disconnects a collection viewer (such as a data-table) from this data source. Can be used\n     * to perform any clean-up or tear-down operations when a view is being destroyed.\n     *\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?}\n     */\n    DataSource.prototype.disconnect = function (collectionViewer) { };\n}\n/**\n * Checks whether an object is a data source.\n * @param {?} value\n * @return {?}\n */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/array-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * DataSource wrapper for a native array.\n * @template T\n */\nclass ArrayDataSource extends DataSource {\n    /**\n     * @param {?} _data\n     */\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    /**\n     * @return {?}\n     */\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ArrayDataSource.prototype._data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/collection-viewer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for any component that provides a view of some data collection and wants to provide\n * information regarding the view and any changes made.\n * @record\n */\nfunction CollectionViewer() { }\nif (false) {\n    /**\n     * A stream that emits whenever the `CollectionViewer` starts looking at a new portion of the\n     * data. The `start` index is inclusive, while the `end` is exclusive.\n     * @type {?}\n     */\n    CollectionViewer.prototype.viewChange;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/selection-model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nclass SelectionModel {\n    /**\n     * @param {?=} _multiple\n     * @param {?=} initiallySelectedValues\n     * @param {?=} _emitChanges\n     */\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /**\n         * Currently-selected values.\n         */\n        this._selection = new Set();\n        /**\n         * Keeps track of the deselected options that haven't been emitted by the change event.\n         */\n        this._deselectedToEmit = [];\n        /**\n         * Keeps track of the selected options that haven't been emitted by the change event.\n         */\n        this._selectedToEmit = [];\n        /**\n         * Event emitted when the value has changed.\n         */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                value => this._markSelected(value)));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selected values.\n     * @return {?}\n     */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._markSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._unmarkSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            (/** @type {?} */ (this._selected)).sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     * @return {?}\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /**\n     * Selects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Deselects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Clears out the selected values.\n     * @private\n     * @return {?}\n     */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => this._unmarkSelected(value)));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\nif (false) {\n    /**\n     * Currently-selected values.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selection;\n    /**\n     * Keeps track of the deselected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._deselectedToEmit;\n    /**\n     * Keeps track of the selected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selectedToEmit;\n    /**\n     * Cache for the array value of the selected items.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selected;\n    /**\n     * Event emitted when the value has changed.\n     * @type {?}\n     */\n    SelectionModel.prototype.changed;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._emitChanges;\n}\n/**\n * Event emitted when the value of a MatSelectionModel has changed.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction SelectionChange() { }\nif (false) {\n    /**\n     * Model that dispatched the event.\n     * @type {?}\n     */\n    SelectionChange.prototype.source;\n    /**\n     * Options that were added to the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.added;\n    /**\n     * Options that were removed from the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.removed;\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/unique-selection-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return (/**\n         * @return {?}\n         */\n        () => {\n            this._listeners = this._listeners.filter((/**\n             * @param {?} registered\n             * @return {?}\n             */\n            (registered) => {\n                return listener !== registered;\n            }));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\n/** @nocollapse */ UniqueSelectionDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    UniqueSelectionDispatcher.prototype._listeners;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/tree-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for a class that can flatten hierarchical structured data and re-expand the flattened\n * data back into its original structure. Should be used in conjunction with the cdk-tree.\n * @record\n * @template T\n */\nfunction TreeDataNodeFlattener() { }\nif (false) {\n    /**\n     * Transforms a set of hierarchical structured data into a flattened data array.\n     * @param {?} structuredData\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.flattenNodes = function (structuredData) { };\n    /**\n     * Expands a flattened array of data into its hierarchical form using the provided expansion\n     * model.\n     * @param {?} nodes\n     * @param {?} expansionModel\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.expandFlattenedNodes = function (nodes, expansionModel) { };\n    /**\n     * Put node descendants of node in array.\n     * If `onlyExpandable` is true, then only process expandable descendants.\n     * @param {?} node\n     * @param {?} nodes\n     * @param {?} onlyExpandable\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.nodeDescendents = function (node, nodes, onlyExpandable) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, getMultipleValuesInSingleSelectionError, isDataSource };\n\n//# sourceMappingURL=collections.js.map","import { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Injectable, NgZone, Inject, ɵɵdefineInjectable, ɵɵinject, Optional, SkipSelf, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/block-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} document\n     */\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    attach() { }\n    /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    enable() {\n        if (this._canBeEnabled()) {\n            /** @type {?} */\n            const root = (/** @type {?} */ (this._document.documentElement));\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    disable() {\n        if (this._isEnabled) {\n            /** @type {?} */\n            const html = (/** @type {?} */ (this._document.documentElement));\n            /** @type {?} */\n            const body = (/** @type {?} */ (this._document.body));\n            /** @type {?} */\n            const htmlStyle = (/** @type {?} */ (html.style));\n            /** @type {?} */\n            const bodyStyle = (/** @type {?} */ (body.style));\n            /** @type {?} */\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            /** @type {?} */\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n            bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        /** @type {?} */\n        const html = (/** @type {?} */ (this._document.documentElement));\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        /** @type {?} */\n        const body = this._document.body;\n        /** @type {?} */\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousHTMLStyles;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousScrollPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._isEnabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes a strategy that will be used by an overlay to handle scroll events while it is open.\n * @record\n */\nfunction ScrollStrategy() { }\nif (false) {\n    /**\n     * Enable this scroll strategy (called when the attached overlay is attached to a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.enable;\n    /**\n     * Disable this scroll strategy (called when the attached overlay is detached from a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.disable;\n    /**\n     * Attaches this `ScrollStrategy` to an overlay.\n     * @type {?}\n     */\n    ScrollStrategy.prototype.attach;\n    /**\n     * Detaches the scroll strategy from the current overlay.\n     * @type {?|undefined}\n     */\n    ScrollStrategy.prototype.detach;\n}\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n * @return {?}\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/close-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the CloseScrollStrategy.\n * @record\n */\nfunction CloseScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Amount of pixels the user has to scroll before the overlay is closed.\n     * @type {?|undefined}\n     */\n    CloseScrollStrategyConfig.prototype.threshold;\n}\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /**\n         * Detaches the overlay ref and disables the scroll strategy.\n         */\n        this._detach = (/**\n         * @return {?}\n         */\n        () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this._overlayRef.detach()));\n            }\n        });\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        /** @type {?} */\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > (/** @type {?} */ ((/** @type {?} */ (this._config)).threshold))) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            }));\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._initialScrollPosition;\n    /**\n     * Detaches the overlay ref and disables the scroll strategy.\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._detach;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/noop-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Scroll strategy that doesn't do anything.\n */\nclass NoopScrollStrategy {\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    enable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    disable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    attach() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/scroll-clip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is scrolled out of view\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} containerBounds\n     * @return {?}\n     */\n    containerBounds => {\n        /** @type {?} */\n        const outsideAbove = element.bottom < containerBounds.top;\n        /** @type {?} */\n        const outsideBelow = element.top > containerBounds.bottom;\n        /** @type {?} */\n        const outsideLeft = element.right < containerBounds.left;\n        /** @type {?} */\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    }));\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is clipped\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} scrollContainerRect\n     * @return {?}\n     */\n    scrollContainerRect => {\n        /** @type {?} */\n        const clippedAbove = element.top < scrollContainerRect.top;\n        /** @type {?} */\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        /** @type {?} */\n        const clippedLeft = element.left < scrollContainerRect.left;\n        /** @type {?} */\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/reposition-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the RepositionScrollStrategy.\n * @record\n */\nfunction RepositionScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Time in milliseconds to throttle the scroll events.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.scrollThrottle;\n    /**\n     * Whether to close the overlay once the user has scrolled away completely.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.autoClose;\n}\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (!this._scrollSubscription) {\n            /** @type {?} */\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    /** @type {?} */\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    /** @type {?} */\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._overlayRef.detach()));\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?} document\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /**\n         * Do nothing on scroll.\n         */\n        this.noop = (/**\n         * @return {?}\n         */\n        () => new NoopScrollStrategy());\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config));\n        /**\n         * Block scrolling.\n         */\n        this.block = (/**\n         * @return {?}\n         */\n        () => new BlockScrollStrategy(this._viewportRuler, this._document));\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config));\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollStrategyOptions.ɵprov = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._document;\n    /**\n     * Do nothing on scroll.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.noop;\n    /**\n     * Close the overlay as soon as the user scrolls.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.close;\n    /**\n     * Block scrolling.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.block;\n    /**\n     * Update the overlay's position on scroll.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * Allows debouncing the reposition calls.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.reposition;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Initial configuration used when creating an overlay.\n */\nclass OverlayConfig {\n    /**\n     * @param {?=} config\n     */\n    constructor(config) {\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /**\n         * Custom class to add to the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the overlay has a backdrop.\n         */\n        this.hasBackdrop = false;\n        /**\n         * Custom class to add to the backdrop\n         */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            /** @type {?} */\n            const configKeys = (/** @type {?} */ (Object.keys(config)));\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = (/** @type {?} */ (config[key]));\n                }\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * Strategy with which to position the overlay.\n     * @type {?}\n     */\n    OverlayConfig.prototype.positionStrategy;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    OverlayConfig.prototype.scrollStrategy;\n    /**\n     * Custom class to add to the overlay pane.\n     * @type {?}\n     */\n    OverlayConfig.prototype.panelClass;\n    /**\n     * Whether the overlay has a backdrop.\n     * @type {?}\n     */\n    OverlayConfig.prototype.hasBackdrop;\n    /**\n     * Custom class to add to the backdrop\n     * @type {?}\n     */\n    OverlayConfig.prototype.backdropClass;\n    /**\n     * The width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.width;\n    /**\n     * The height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.height;\n    /**\n     * The min-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minWidth;\n    /**\n     * The min-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minHeight;\n    /**\n     * The max-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxWidth;\n    /**\n     * The max-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxHeight;\n    /**\n     * Direction of the text in the overlay panel. If a `Directionality` instance\n     * is passed in, the overlay will handle changes to its value automatically.\n     * @type {?}\n     */\n    OverlayConfig.prototype.direction;\n    /**\n     * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    OverlayConfig.prototype.disposeOnNavigation;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A connection point on the origin element.\n * @record\n */\nfunction OriginConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originX;\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originY;\n}\n/**\n * A connection point on the overlay element.\n * @record\n */\nfunction OverlayConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayX;\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayY;\n}\n/**\n * The points of the origin element and the overlay element to connect.\n */\nclass ConnectionPositionPair {\n    /**\n     * @param {?} origin\n     * @param {?} overlay\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @param {?=} panelClass\n     */\n    constructor(origin, overlay, offsetX, offsetY, panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\nif (false) {\n    /**\n     * X-axis attachment point for connected overlay origin. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originX;\n    /**\n     * Y-axis attachment point for connected overlay origin. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originY;\n    /**\n     * X-axis attachment point for connected overlay. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayX;\n    /**\n     * Y-axis attachment point for connected overlay. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayY;\n    /**\n     * Offset along the X axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetX;\n    /**\n     * Offset along the Y axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetY;\n    /**\n     * Class(es) to be applied to the panel while this position is active.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.panelClass;\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n * \\@docs-private\n */\nclass ScrollingVisibility {\n}\nif (false) {\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginOutsideView;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayOutsideView;\n}\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nclass ConnectedOverlayPositionChange {\n    /**\n     * @param {?} connectionPair\n     * @param {?} scrollableViewProperties\n     */\n    constructor(connectionPair, scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/** @nocollapse */\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\nif (false) {\n    /**\n     * The position used as a result of this change.\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.connectionPair;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.scrollableViewProperties;\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/keyboard/overlay-keyboard-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        /**\n         * Currently attached overlays in the order they were attached.\n         */\n        this._attachedOverlays = [];\n        /**\n         * Keyboard event listener that will be attached to the body.\n         */\n        this._keydownListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        });\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._detach();\n    }\n    /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n        this._attachedOverlays.push(overlayRef);\n    }\n    /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    remove(overlayRef) {\n        /** @type {?} */\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this._detach();\n        }\n    }\n    /**\n     * Detaches the global keyboard event listener.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ OverlayKeyboardDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Currently attached overlays in the order they were attached.\n     * @type {?}\n     */\n    OverlayKeyboardDispatcher.prototype._attachedOverlays;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._isAttached;\n    /**\n     * Keyboard event listener that will be attached to the body.\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._keydownListener;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} dispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        (/** @type {?} */ (\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT))\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n * @type {?}\n */\nconst isTestEnvironment = typeof window !== 'undefined' && !!window &&\n    !!(((/** @type {?} */ (window))).__karma__ || ((/** @type {?} */ (window))).jasmine);\n/**\n * Container inside which all overlays will render.\n */\nclass OverlayContainer {\n    /**\n     * @param {?} document\n     * @param {?=} _platform\n     */\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        // @breaking-change 10.0.0 Remove null check for `_platform`.\n        /** @type {?} */\n        const isBrowser = this._platform ? this._platform.isBrowser : typeof window !== 'undefined';\n        /** @type {?} */\n        const containerClass = 'cdk-overlay-container';\n        if (isBrowser || isTestEnvironment) {\n            /** @type {?} */\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                (/** @type {?} */ (oppositePlatformContainers[i].parentNode)).removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        /** @type {?} */\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ OverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._containerElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._document;\n    /**\n     * @deprecated `platform` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._platform;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentContainer\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        (/** @type {?} */ (DOCUMENT))\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    /**\n     * @param {?} _portalOutlet\n     * @param {?} _host\n     * @param {?} _pane\n     * @param {?} _config\n     * @param {?} _ngZone\n     * @param {?} _keyboardDispatcher\n     * @param {?} _document\n     * @param {?=} _location\n     */\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._backdropClick.next(event));\n        /**\n         * Stream of keydown events dispatched to this overlay.\n         */\n        this._keydownEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /**\n     * The overlay's HTML element\n     * @return {?}\n     */\n    get overlayElement() {\n        return this._pane;\n    }\n    /**\n     * The overlay's backdrop HTML element.\n     * @return {?}\n     */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     * @return {?}\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    attach(portal) {\n        /** @type {?} */\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        }));\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        // @breaking-change 8.0.0 remove the null check for `_location`\n        // once the constructor parameter is made required.\n        if (this._config.disposeOnNavigation && this._location) {\n            this._locationChanges = this._location.subscribe((/**\n             * @return {?}\n             */\n            () => this.dispose()));\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        /** @type {?} */\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        // Stop listening for location changes.\n        this._locationChanges.unsubscribe();\n        return detachmentResult;\n    }\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        /** @type {?} */\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = (/** @type {?} */ (null));\n        }\n        this._previousHostParent = this._pane = (/** @type {?} */ (null));\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._backdropClick.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    attachments() {\n        return this._attachments.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    detachments() {\n        return this._detachments.asObservable();\n    }\n    /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._keydownEvents.asObservable();\n    }\n    /**\n     * Gets the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    getConfig() {\n        return this._config;\n    }\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /**\n     * Switches to a new position strategy and updates the overlay position.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     * @return {?}\n     */\n    getDirection() {\n        /** @type {?} */\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /**\n     * Switches to a new scroll strategy.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /**\n     * Updates the text direction of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @private\n     * @return {?}\n     */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        /** @type {?} */\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @private\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    }\n    /**\n     * Attaches a backdrop for this overlay.\n     * @private\n     * @return {?}\n     */\n    _attachBackdrop() {\n        /** @type {?} */\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        (/** @type {?} */ (this._host.parentElement)).insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                }));\n            }));\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @private\n     * @return {?}\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            (/** @type {?} */ (this._host.parentNode)).appendChild(this._host);\n        }\n    }\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    detachBackdrop() {\n        /** @type {?} */\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        /** @type {?} */\n        let timeoutId;\n        /** @type {?} */\n        let finishDetach = (/**\n         * @return {?}\n         */\n        () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses((/** @type {?} */ (backdropToDetach)), this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        });\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (backdropToDetach)).addEventListener('transitionend', finishDetach);\n        }));\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(finishDetach, 500)));\n    }\n    /**\n     * Toggles a single CSS class or an array of classes on an element.\n     * @private\n     * @param {?} element\n     * @param {?} cssClasses\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _toggleClasses(element, cssClasses, isAdd) {\n        /** @type {?} */\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach((/**\n         * @param {?} cssClass\n         * @return {?}\n         */\n        cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        }));\n    }\n    /**\n     * Detaches the overlay content next time the zone stabilizes.\n     * @private\n     * @return {?}\n     */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            /** @type {?} */\n            const subscription = this._ngZone.onStable\n                .asObservable()\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            }));\n        }));\n    }\n    /**\n     * Disposes of a scroll strategy.\n     * @private\n     * @return {?}\n     */\n    _disposeScrollStrategy() {\n        /** @type {?} */\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClick;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._attachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._detachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._positionStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._scrollStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._locationChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClickHandler;\n    /**\n     * Reference to the parent of the `_host` at the time it was detached. Used to restore\n     * the `_host` to its original position in the DOM when it gets re-attached.\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._previousHostParent;\n    /**\n     * Stream of keydown events dispatched to this overlay.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEvents;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._portalOutlet;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._host;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._pane;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._location;\n}\n/**\n * Size properties for an overlay.\n * @record\n */\nfunction OverlaySizeConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.width;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.height;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minHeight;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/flexible-connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/**\n * Class to be added to the overlay bounding box.\n * @type {?}\n */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/**\n * Regex used to split a string on its CSS units.\n * @type {?}\n */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /**\n     * @param {?} connectedTo\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /**\n         * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n         */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /**\n         * Whether the overlay was pushed in a previous positioning.\n         */\n        this._isPushed = false;\n        /**\n         * Whether the overlay can be pushed on-screen on the initial open.\n         */\n        this._canPush = true;\n        /**\n         * Whether the overlay can grow via flexible width/height after the initial open.\n         */\n        this._growAfterOpen = false;\n        /**\n         * Whether the overlay's width and height can be constrained to fit within the viewport.\n         */\n        this._hasFlexibleDimensions = true;\n        /**\n         * Whether the overlay position is locked.\n         */\n        this._positionLocked = false;\n        /**\n         * Amount of space that must be maintained between the overlay and the edge of the viewport.\n         */\n        this._viewportMargin = 0;\n        /**\n         * The Scrollable containers used to check scrollable view properties on position change.\n         */\n        this._scrollables = [];\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        /**\n         * Subject that emits whenever the position changes.\n         */\n        this._positionChanges = new Subject();\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Default offset for the overlay along the x axis.\n         */\n        this._offsetX = 0;\n        /**\n         * Default offset for the overlay along the y axis.\n         */\n        this._offsetY = 0;\n        /**\n         * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n         */\n        this._appliedPanelClasses = [];\n        /**\n         * Observable sequence of position changes.\n         */\n        this.positionChanges = this._positionChanges.asObservable();\n        this.setOrigin(connectedTo);\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attaches this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        }));\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        /** @type {?} */\n        const originRect = this._originRect;\n        /** @type {?} */\n        const overlayRect = this._overlayRect;\n        /** @type {?} */\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        /** @type {?} */\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        /** @type {?} */\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            /** @type {?} */\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            /** @type {?} */\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            /** @type {?} */\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            /** @type {?} */\n            let bestFit = null;\n            /** @type {?} */\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                /** @type {?} */\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition((/** @type {?} */ (bestFit)).position, (/** @type {?} */ (bestFit)).origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /**\n     * Cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, (/** @type {?} */ ({\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            })));\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            /** @type {?} */\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            /** @type {?} */\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} scrollables\n     * @return {THIS}\n     */\n    withScrollableContainers(scrollables) {\n        (/** @type {?} */ (this))._scrollables = scrollables;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Adds new preferred positions.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions List of positions options for this overlay.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf((/** @type {?} */ ((/** @type {?} */ (this))._lastPosition))) === -1) {\n            (/** @type {?} */ (this))._lastPosition = null;\n        }\n        (/** @type {?} */ (this))._validatePositions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} margin Required margin between the overlay and the viewport edge in pixels.\n     * @return {THIS}\n     */\n    withViewportMargin(margin) {\n        (/** @type {?} */ (this))._viewportMargin = margin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's width and height can be constrained to fit within the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} flexibleDimensions\n     * @return {THIS}\n     */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        (/** @type {?} */ (this))._hasFlexibleDimensions = flexibleDimensions;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can grow after the initial open via flexible width/height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} growAfterOpen\n     * @return {THIS}\n     */\n    withGrowAfterOpen(growAfterOpen = true) {\n        (/** @type {?} */ (this))._growAfterOpen = growAfterOpen;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} canPush\n     * @return {THIS}\n     */\n    withPush(canPush = true) {\n        (/** @type {?} */ (this))._canPush = canPush;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked = true) {\n        (/** @type {?} */ (this))._positionLocked = isLocked;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetX(offset) {\n        (/** @type {?} */ (this))._offsetX = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetY(offset) {\n        (/** @type {?} */ (this))._offsetY = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     * @return {THIS}\n     */\n    withTransformOriginOn(selector) {\n        (/** @type {?} */ (this))._transformOriginSelector = selector;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @private\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOriginPoint(originRect, pos) {\n        /** @type {?} */\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            /** @type {?} */\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            /** @type {?} */\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        /** @type {?} */\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @private\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        /** @type {?} */\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        /** @type {?} */\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /**\n     * Gets how well an overlay at the given point will fit within the viewport.\n     * @private\n     * @param {?} point\n     * @param {?} overlay\n     * @param {?} viewport\n     * @param {?} position\n     * @return {?}\n     */\n    _getOverlayFit(point, overlay, viewport, position) {\n        let { x, y } = point;\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        /** @type {?} */\n        let leftOverflow = 0 - x;\n        /** @type {?} */\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        /** @type {?} */\n        let topOverflow = 0 - y;\n        /** @type {?} */\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        /** @type {?} */\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        /** @type {?} */\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        /** @type {?} */\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @private\n     * @param {?} fit How well the overlay fits in the viewport at some position.\n     * @param {?} point The (x, y) coordinates of the overlat at some position.\n     * @param {?} viewport The geometry of the viewport.\n     * @return {?}\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            /** @type {?} */\n            const availableHeight = viewport.bottom - point.y;\n            /** @type {?} */\n            const availableWidth = viewport.right - point.x;\n            /** @type {?} */\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            /** @type {?} */\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            /** @type {?} */\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            /** @type {?} */\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @private\n     * @param {?} start Starting point from which the overlay is pushed.\n     * @param {?} overlay Dimensions of the overlay.\n     * @param {?} scrollPosition Current viewport scroll position.\n     * @return {?} The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, overlay, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        /** @type {?} */\n        const overflowRight = Math.max(start.x + overlay.width - viewport.right, 0);\n        /** @type {?} */\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.bottom, 0);\n        /** @type {?} */\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        /** @type {?} */\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        /** @type {?} */\n        let pushX = 0;\n        /** @type {?} */\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @private\n     * @param {?} position The position preference\n     * @param {?} originPoint The point on the origin element where the overlay is connected.\n     * @return {?}\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            /** @type {?} */\n            const scrollableViewProperties = this._getScrollVisibility();\n            /** @type {?} */\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /**\n     * Sets the transform origin based on the configured selector and the passed-in position.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        /** @type {?} */\n        const elements = (/** @type {?} */ (this._boundingBox)).querySelectorAll(this._transformOriginSelector);\n        /** @type {?} */\n        let xOrigin;\n        /** @type {?} */\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     * @private\n     * @param {?} origin\n     * @param {?} position\n     * @return {?}\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        let height;\n        /** @type {?} */\n        let top;\n        /** @type {?} */\n        let bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            /** @type {?} */\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        /** @type {?} */\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        /** @type {?} */\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        /** @type {?} */\n        let width;\n        /** @type {?} */\n        let left;\n        /** @type {?} */\n        let right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            /** @type {?} */\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: (/** @type {?} */ (top)), left: (/** @type {?} */ (left)), bottom: (/** @type {?} */ (bottom)), right: (/** @type {?} */ (right)), width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @private\n     * @param {?} origin The point on the origin element where the overlay is connected.\n     * @param {?} position The position preference\n     * @return {?}\n     */\n    _setBoundingBoxStyles(origin, position) {\n        /** @type {?} */\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            /** @type {?} */\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            /** @type {?} */\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, styles);\n    }\n    /**\n     * Resets the styles for the bounding box so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetBoundingBoxStyles() {\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, (/** @type {?} */ ({\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        })));\n    }\n    /**\n     * Resets the styles for the overlay pane so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, (/** @type {?} */ ({\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        })));\n    }\n    /**\n     * Sets positioning styles to the overlay element.\n     * @private\n     * @param {?} originPoint\n     * @param {?} position\n     * @return {?}\n     */\n    _setOverlayElementStyles(originPoint, position) {\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        /** @type {?} */\n        const hasExactPosition = this._hasExactPosition();\n        /** @type {?} */\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            /** @type {?} */\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        /** @type {?} */\n        let transformString = '';\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /**\n     * Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ top: '', bottom: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        /** @type {?} */\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            /** @type {?} */\n            const documentHeight = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /**\n     * Gets the exact left/right for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ left: '', right: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        /** @type {?} */\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            /** @type {?} */\n            const documentWidth = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @private\n     * @return {?}\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        /** @type {?} */\n        const originBounds = this._getOriginRect();\n        /** @type {?} */\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        /** @type {?} */\n        const scrollContainerBounds = this._scrollables.map((/**\n         * @param {?} scrollable\n         * @return {?}\n         */\n        scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        }));\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from its length.\n     * @private\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((/**\n         * @param {?} currentValue\n         * @param {?} currentOverflow\n         * @return {?}\n         */\n        (currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }), length);\n    }\n    /**\n     * Narrows the given viewport rect by the current _viewportMargin.\n     * @private\n     * @return {?}\n     */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        /** @type {?} */\n        const width = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n        /** @type {?} */\n        const height = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n        /** @type {?} */\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Determines whether the overlay uses exact or flexible positioning.\n     * @private\n     * @return {?}\n     */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /**\n     * Retrieves the offset of a position along the x or y axis.\n     * @private\n     * @param {?} position\n     * @param {?} axis\n     * @return {?}\n     */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /**\n     * Validates that the current position match the expected values.\n     * @private\n     * @return {?}\n     */\n    _validatePositions() {\n        if (!this._preferredPositions.length) {\n            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n        }\n        // TODO(crisbeto): remove these once Angular's template type\n        // checking is advanced enough to catch these cases.\n        this._preferredPositions.forEach((/**\n         * @param {?} pair\n         * @return {?}\n         */\n        pair => {\n            validateHorizontalPosition('originX', pair.originX);\n            validateVerticalPosition('originY', pair.originY);\n            validateHorizontalPosition('overlayX', pair.overlayX);\n            validateVerticalPosition('overlayY', pair.overlayY);\n        }));\n    }\n    /**\n     * Adds a single CSS class or an array of classes on the overlay panel.\n     * @private\n     * @param {?} cssClasses\n     * @return {?}\n     */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            }));\n        }\n    }\n    /**\n     * Clears the classes that the position strategy has applied from the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                this._pane.classList.remove(cssClass);\n            }));\n            this._appliedPanelClasses = [];\n        }\n    }\n    /**\n     * Returns the ClientRect of the current origin.\n     * @private\n     * @return {?}\n     */\n    _getOriginRect() {\n        /** @type {?} */\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        /** @type {?} */\n        const width = origin.width || 0;\n        /** @type {?} */\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * Whether we're performing the very first positioning of the overlay.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isInitialRender;\n    /**\n     * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastBoundingBoxSize;\n    /**\n     * Whether the overlay was pushed in a previous positioning.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isPushed;\n    /**\n     * Whether the overlay can be pushed on-screen on the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._canPush;\n    /**\n     * Whether the overlay can grow via flexible width/height after the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._growAfterOpen;\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._hasFlexibleDimensions;\n    /**\n     * Whether the overlay position is locked.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionLocked;\n    /**\n     * Cached origin dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._originRect;\n    /**\n     * Cached overlay dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRect;\n    /**\n     * Cached viewport dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRect;\n    /**\n     * Amount of space that must be maintained between the overlay and the edge of the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportMargin;\n    /**\n     * The Scrollable containers used to check scrollable view properties on position change.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._scrollables;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._preferredPositions;\n    /**\n     * The origin element against which the overlay will be positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._origin;\n    /**\n     * The overlay pane element.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._pane;\n    /**\n     * Whether the strategy has been disposed of already.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isDisposed;\n    /**\n     * Parent element for the overlay panel used to constrain the overlay panel's size to fit\n     * within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._boundingBox;\n    /**\n     * The last position to have been calculated as the best fit position.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastPosition;\n    /**\n     * Subject that emits whenever the position changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionChanges;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._resizeSubscription;\n    /**\n     * Default offset for the overlay along the x axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetX;\n    /**\n     * Default offset for the overlay along the y axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetY;\n    /**\n     * Selector to be used when finding the elements on which to set the transform origin.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._transformOriginSelector;\n    /**\n     * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._appliedPanelClasses;\n    /**\n     * Amount by which the overlay was pushed in each axis during the last time it was positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._previousPushAmount;\n    /**\n     * Observable sequence of position changes.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.positionChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayContainer;\n}\n/**\n * A simple (x, y) coordinate.\n * @record\n */\nfunction Point() { }\nif (false) {\n    /** @type {?} */\n    Point.prototype.x;\n    /** @type {?} */\n    Point.prototype.y;\n}\n/**\n * Record of measurements for how an overlay (at a given position) fits into the viewport.\n * @record\n */\nfunction OverlayFit() { }\nif (false) {\n    /**\n     * Whether the overlay fits completely in the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.isCompletelyWithinViewport;\n    /**\n     * Whether the overlay fits in the viewport on the y-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportVertically;\n    /**\n     * Whether the overlay fits in the viewport on the x-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportHorizontally;\n    /**\n     * The total visible area (in px^2) of the overlay inside the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.visibleArea;\n}\n/**\n * Record of the measurments determining whether an overlay will fit in a specific position.\n * @record\n */\nfunction FallbackPosition() { }\nif (false) {\n    /** @type {?} */\n    FallbackPosition.prototype.position;\n    /** @type {?} */\n    FallbackPosition.prototype.originPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayFit;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayRect;\n}\n/**\n * Position and size of the overlay sizing wrapper for a specific position.\n * @record\n */\nfunction BoundingBoxRect() { }\nif (false) {\n    /** @type {?} */\n    BoundingBoxRect.prototype.top;\n    /** @type {?} */\n    BoundingBoxRect.prototype.left;\n    /** @type {?} */\n    BoundingBoxRect.prototype.bottom;\n    /** @type {?} */\n    BoundingBoxRect.prototype.right;\n    /** @type {?} */\n    BoundingBoxRect.prototype.height;\n    /** @type {?} */\n    BoundingBoxRect.prototype.width;\n}\n/**\n * Record of measures determining how well a given position will fit with flexible dimensions.\n * @record\n */\nfunction FlexibleFit() { }\nif (false) {\n    /** @type {?} */\n    FlexibleFit.prototype.position;\n    /** @type {?} */\n    FlexibleFit.prototype.origin;\n    /** @type {?} */\n    FlexibleFit.prototype.overlayRect;\n    /** @type {?} */\n    FlexibleFit.prototype.boundingBoxRect;\n}\n/**\n * A connected position as specified by the user.\n * @record\n */\nfunction ConnectedPosition() { }\nif (false) {\n    /** @type {?} */\n    ConnectedPosition.prototype.originX;\n    /** @type {?} */\n    ConnectedPosition.prototype.originY;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayX;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.weight;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetX;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.panelClass;\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n * @param {?} input\n * @return {?}\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * \\@breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    /**\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?} connectedTo\n     * @param {?} viewportRuler\n     * @param {?} document\n     * @param {?} platform\n     * @param {?} overlayContainer\n     */\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @return {?}\n     */\n    get _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Emits an event when the connection point changes.\n     * @return {?}\n     */\n    get onPositionChange() {\n        return this._positionStrategy.positionChanges;\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {THIS}\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        /** @type {?} */\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        (/** @type {?} */ (this))._preferredPositions.push(position);\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} dir New layout direction.\n     * @return {THIS}\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.setDirection(dir);\n        }\n        else {\n            (/** @type {?} */ (this))._direction = dir;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withOffsetX(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetX(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withOffsetY(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetY(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked) {\n        (/** @type {?} */ (this))._positionStrategy.withLockedPosition(isLocked);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions.slice();\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin element.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._positionStrategy.setOrigin(origin);\n        return (/** @type {?} */ (this));\n    }\n}\nif (false) {\n    /**\n     * Reference to the underlying position strategy to which all the API calls are proxied.\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._positionStrategy;\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._direction;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._preferredPositions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/global-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be added to the overlay pane wrapper.\n * @type {?}\n */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        /** @type {?} */\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New top offset.\n     * @return {THIS}\n     */\n    top(value = '') {\n        (/** @type {?} */ (this))._bottomOffset = '';\n        (/** @type {?} */ (this))._topOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New left offset.\n     * @return {THIS}\n     */\n    left(value = '') {\n        (/** @type {?} */ (this))._rightOffset = '';\n        (/** @type {?} */ (this))._leftOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New bottom offset.\n     * @return {THIS}\n     */\n    bottom(value = '') {\n        (/** @type {?} */ (this))._topOffset = '';\n        (/** @type {?} */ (this))._bottomOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New right offset.\n     * @return {THIS}\n     */\n    right(value = '') {\n        (/** @type {?} */ (this))._leftOffset = '';\n        (/** @type {?} */ (this))._rightOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New width for the overlay\n     * @return {THIS}\n     */\n    width(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ width: value });\n        }\n        else {\n            (/** @type {?} */ (this))._width = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New height for the overlay\n     * @return {THIS}\n     */\n    height(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ height: value });\n        }\n        else {\n            (/** @type {?} */ (this))._height = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {THIS}\n     */\n    centerHorizontally(offset = '') {\n        (/** @type {?} */ (this)).left(offset);\n        (/** @type {?} */ (this))._justifyContent = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {THIS}\n     */\n    centerVertically(offset = '') {\n        (/** @type {?} */ (this)).top(offset);\n        (/** @type {?} */ (this))._alignItems = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parentStyles = this._overlayRef.hostElement.style;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        /** @type {?} */\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        /** @type {?} */\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * \\@docs-private\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parent = this._overlayRef.hostElement;\n        /** @type {?} */\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._cssPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._topOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._bottomOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._leftOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._rightOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._alignItems;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._justifyContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._width;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._height;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._isDisposed;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/overlay-position-builder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Builder for overlay position strategy.\n */\nclass OverlayPositionBuilder {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param {?} origin Origin relative to which to position the overlay.\n     * @return {?}\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\n/** @nocollapse */\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n/** @nocollapse */ OverlayPositionBuilder.ɵprov = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._overlayContainer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Next overlay unique ID.\n * @type {?}\n */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    /**\n     * @param {?} scrollStrategies\n     * @param {?} _overlayContainer\n     * @param {?} _componentFactoryResolver\n     * @param {?} _positionBuilder\n     * @param {?} _keyboardDispatcher\n     * @param {?} _injector\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _directionality\n     * @param {?=} _location\n     */\n    constructor(scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n    }\n    /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    create(config) {\n        /** @type {?} */\n        const host = this._createHostElement();\n        /** @type {?} */\n        const pane = this._createPaneElement(host);\n        /** @type {?} */\n        const portalOutlet = this._createPortalOutlet(pane);\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @private\n     * @param {?} host\n     * @return {?} Newly-created pane element\n     */\n    _createPaneElement(host) {\n        /** @type {?} */\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @private\n     * @return {?} Newly-create host element.\n     */\n    _createHostElement() {\n        /** @type {?} */\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @private\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8)); };\nOverlay.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: Overlay.ɵfac });\n/** @nocollapse */\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._appRef;\n    /**\n     * Scrolling strategies that can be used when creating an overlay.\n     * @type {?}\n     */\n    Overlay.prototype.scrollStrategies;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._overlayContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._positionBuilder;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._directionality;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._location;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n * @type {?}\n */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/**\n * Injection token that determines the scroll handling while the connected overlay is open.\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @param {?=} config\n     * @return {?}\n     */\n    (config) => overlay.scrollStrategies.reposition(config));\n}\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\n/** @nocollapse */\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    CdkOverlayOrigin.prototype.elementRef;\n}\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    /**\n     * @param {?} _overlay\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     * @param {?} scrollStrategyFactory\n     * @param {?} _dir\n     */\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        /**\n         * Margin between the overlay and the viewport edges.\n         */\n        this.viewportMargin = 0;\n        /**\n         * Whether the overlay is open.\n         */\n        this.open = false;\n        /**\n         * Event emitted when the backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Event emitted when the position has changed.\n         */\n        this.positionChange = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been attached.\n         */\n        this.attach = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been detached.\n         */\n        this.detach = new EventEmitter();\n        /**\n         * Emits when there are keyboard events that are targeted at the overlay.\n         */\n        this.overlayKeydown = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the x-axis\n     * @return {?}\n     */\n    get offsetX() { return this._offsetX; }\n    /**\n     * @param {?} offsetX\n     * @return {?}\n     */\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the y-axis\n     * @return {?}\n     */\n    get offsetY() { return this._offsetY; }\n    /**\n     * @param {?} offsetY\n     * @return {?}\n     */\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * Whether or not the overlay should attach a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /**\n     * Whether or not the overlay should be locked when scrolling.\n     * @return {?}\n     */\n    get lockPosition() { return this._lockPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @return {?}\n     */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the overlay can grow after the initial open when flexible positioning is turned on.\n     * @return {?}\n     */\n    get growAfterOpen() { return this._growAfterOpen; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @return {?}\n     */\n    get push() { return this._push; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /**\n     * The associated overlay reference.\n     * @return {?}\n     */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /**\n     * The element's layout direction.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /**\n     * Creates an overlay\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n        this._overlayRef.keydownEvents().subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        }));\n    }\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @private\n     * @return {?}\n     */\n    _buildConfig() {\n        /** @type {?} */\n        const positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /**\n     * Updates the state of a position strategy, based on the values of the directive inputs.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _updatePositionStrategy(positionStrategy) {\n        /** @type {?} */\n        const positions = this.positions.map((/**\n         * @param {?} currentPosition\n         * @return {?}\n         */\n        currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        })));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @private\n     * @return {?}\n     */\n    _createPositionStrategy() {\n        /** @type {?} */\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        strategy.positionChanges.subscribe((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => this.positionChange.emit(p)));\n        return strategy;\n    }\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.backdropClick.emit(event);\n            }));\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_lockPosition;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_flexibleDimensions;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_growAfterOpen;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._templatePortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._lockPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._growAfterOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._flexibleDimensions;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._backdropSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetX;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetY;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._scrollStrategyFactory;\n    /**\n     * Origin for the connected overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.origin;\n    /**\n     * Registered connected position pairs.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positions;\n    /**\n     * This input overrides the positions input if specified. It lets users pass\n     * in arbitrary positioning strategies.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionStrategy;\n    /**\n     * The width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.width;\n    /**\n     * The height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.height;\n    /**\n     * The min width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minWidth;\n    /**\n     * The min height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minHeight;\n    /**\n     * The custom class to be set on the backdrop element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClass;\n    /**\n     * The custom class to add to the overlay pane element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.panelClass;\n    /**\n     * Margin between the overlay and the viewport edges.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.viewportMargin;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.scrollStrategy;\n    /**\n     * Whether the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.open;\n    /**\n     * CSS selector which to set the transform origin.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.transformOriginSelector;\n    /**\n     * Event emitted when the backdrop is clicked.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClick;\n    /**\n     * Event emitted when the position has changed.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionChange;\n    /**\n     * Event emitted when the overlay has been attached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.attach;\n    /**\n     * Event emitted when the overlay has been detached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.detach;\n    /**\n     * Emits when there are keyboard events that are targeted at the overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.overlayKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._dir;\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass OverlayModule {\n}\nOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OverlayModule_Factory(t) { return new (t || OverlayModule)(); }, providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule],\n        ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin,\n        ScrollingModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n/**\n * @deprecated Use `OverlayModule` instead.\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/fullscreen-overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    /**\n     * @param {?} _document\n     * @param {?=} platform\n     */\n    constructor(_document, \n    /**\n     * @deprecated `platform` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    platform) {\n        super(_document, platform);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener((/**\n         * @return {?}\n         */\n        () => this._adjustParentForFullscreenChange()));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        /** @type {?} */\n        const fullscreenElement = this.getFullscreenElement();\n        /** @type {?} */\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    /**\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _addFullscreenChangeListener(fn) {\n        /** @type {?} */\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            /** @type {?} */\n            const _document = (/** @type {?} */ (this._document));\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    getFullscreenElement() {\n        /** @type {?} */\n        const _document = (/** @type {?} */ (this._document));\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ FullscreenOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenEventName;\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenListener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, OVERLAY_PROVIDERS, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_a, OVERLAY_CONTAINER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_c, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_d, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_e, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_f, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_g };\n\n//# sourceMappingURL=overlay.js.map","import { ElementRef, Directive, TemplateRef, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface that can be used to generically type a class.\n * @record\n * @template T\n */\nfunction ComponentType() { }\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nclass Portal {\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    attach(host) {\n        if (host == null) {\n            throwNullPortalOutletError();\n        }\n        if (host.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return (/** @type {?} */ (host.attach(this)));\n    }\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    detach() {\n        /** @type {?} */\n        let host = this._attachedHost;\n        if (host == null) {\n            throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    }\n    /**\n     * Whether this portal is attached to a host.\n     * @return {?}\n     */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Portal.prototype._attachedHost;\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nclass ComponentPortal extends Portal {\n    /**\n     * @param {?} component\n     * @param {?=} viewContainerRef\n     * @param {?=} injector\n     * @param {?=} componentFactoryResolver\n     */\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\nif (false) {\n    /**\n     * The type of the component that will be instantiated for attachment.\n     * @type {?}\n     */\n    ComponentPortal.prototype.component;\n    /**\n     * [Optional] Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalOutlet.\n     * The origin is necessary when the host is outside of the Angular application context.\n     * @type {?}\n     */\n    ComponentPortal.prototype.viewContainerRef;\n    /**\n     * [Optional] Injector used for the instantiation of the component.\n     * @type {?}\n     */\n    ComponentPortal.prototype.injector;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * Defaults to using the resolver from the outlet that the portal is attached to.\n     * @type {?}\n     */\n    ComponentPortal.prototype.componentFactoryResolver;\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nclass TemplatePortal extends Portal {\n    /**\n     * @param {?} template\n     * @param {?} viewContainerRef\n     * @param {?=} context\n     */\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    /**\n     * @return {?}\n     */\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\nif (false) {\n    /**\n     * The embedded template that will be used to instantiate an embedded View in the host.\n     * @type {?}\n     */\n    TemplatePortal.prototype.templateRef;\n    /**\n     * Reference to the ViewContainer into which the template will be stamped out.\n     * @type {?}\n     */\n    TemplatePortal.prototype.viewContainerRef;\n    /**\n     * Contextual data to be passed in to the embedded view.\n     * @type {?}\n     */\n    TemplatePortal.prototype.context;\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n * @template T\n */\nclass DomPortal extends Portal {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\nif (false) {\n    /**\n     * DOM node hosting the portal's content.\n     * @type {?}\n     */\n    DomPortal.prototype.element;\n}\n/**\n * A `PortalOutlet` is an space that can contain a single `Portal`.\n * @record\n */\nfunction PortalOutlet() { }\nif (false) {\n    /**\n     * Attaches a portal to this outlet.\n     * @param {?} portal\n     * @return {?}\n     */\n    PortalOutlet.prototype.attach = function (portal) { };\n    /**\n     * Detaches the currently attached portal from this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.detach = function () { };\n    /**\n     * Performs cleanup before the outlet is destroyed.\n     * @return {?}\n     */\n    PortalOutlet.prototype.dispose = function () { };\n    /**\n     * Whether there is currently a portal attached to this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.hasAttached = function () { };\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nclass BasePortalOutlet {\n    constructor() {\n        /**\n         * Whether this host has already been permanently disposed.\n         */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    attach(portal) {\n        if (!portal) {\n            throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        throwUnknownPortalTypeError();\n    }\n    /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\nif (false) {\n    /**\n     * The portal currently attached to the host.\n     * @type {?}\n     * @protected\n     */\n    BasePortalOutlet.prototype._attachedPortal;\n    /**\n     * A function that will permanently dispose this host.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._disposeFn;\n    /**\n     * Whether this host has already been permanently disposed.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._isDisposed;\n    /** @type {?} */\n    BasePortalOutlet.prototype.attachDomPortal;\n    /**\n     * @abstract\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachComponentPortal = function (portal) { };\n    /**\n     * @abstract\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachTemplatePortal = function (portal) { };\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * \\@breaking-change 9.0.0\n * @abstract\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/dom-portal-outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} outletElement\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _defaultInjector\n     * @param {?=} _document\n     */\n    constructor(outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => componentRef.destroy()));\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            }));\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        /** @type {?} */\n        let viewContainer = portal.viewContainerRef;\n        /** @type {?} */\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach((/**\n         * @param {?} rootNode\n         * @return {?}\n         */\n        rootNode => this.outletElement.appendChild(rootNode)));\n        this.setDisposeFn(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        })));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @private\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _getComponentRootNode(componentRef) {\n        return (/** @type {?} */ (((/** @type {?} */ (componentRef.hostView))).rootNodes[0]));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._document;\n    /**\n     * Attaches a DOM portal by transferring its content into the outlet.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.attachDomPortal;\n    /**\n     * Element into which the content is projected.\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.outletElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._appRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._defaultInjector;\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     */\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = function CdkPortal_Factory(t) { return new (t || CdkPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortal, selectors: [[\"\", \"cdkPortal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortal.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/**\n * @deprecated Use `CdkPortal` instead.\n * \\@breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = function TemplatePortalDirective_Factory(t) { return ɵTemplatePortalDirective_BaseFactory(t || TemplatePortalDirective); };\nTemplatePortalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TemplatePortalDirective, selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵTemplatePortalDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TemplatePortalDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TemplatePortalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            }]\n    }], null, null); })();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} _componentFactoryResolver\n     * @param {?} _viewContainerRef\n     * @param {?=} _document\n     */\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Whether the portal component is initialized.\n         */\n        this._isInitialized = false;\n        /**\n         * Emits when a portal is attached to the outlet.\n         */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                if (anchorNode.parentNode) {\n                    (/** @type {?} */ (anchorNode.parentNode)).replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Portal associated with the Portal outlet.\n     * @return {?}\n     */\n    get portal() {\n        return this._attachedPortal;\n    }\n    /**\n     * @param {?} portal\n     * @return {?}\n     */\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal;\n    }\n    /**\n     * Component or view reference that is attached to the portal.\n     * @return {?}\n     */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        /** @type {?} */\n        const viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(((/** @type {?} */ (ref.hostView))).rootNodes[0]);\n        }\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => ref.destroy()));\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        /** @type {?} */\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => this._viewContainerRef.clear()));\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /**\n     * Gets the root node of the portal outlet.\n     * @private\n     * @return {?}\n     */\n    _getRootNode() {\n        /** @type {?} */\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (/** @type {?} */ ((nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n            nativeElement : (/** @type {?} */ (nativeElement.parentNode)))));\n    }\n}\nCdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) { return new (t || CdkPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkPortalOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortalOutlet, selectors: [[\"\", \"cdkPortalOutlet\", \"\"]], inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortalOutlet.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkPortalOutlet.propDecorators = {\n    attached: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortalOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { attached: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkPortalOutlet.ngAcceptInputType_portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._document;\n    /**\n     * Whether the portal component is initialized.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._isInitialized;\n    /**\n     * Reference to the currently-attached component/view ref.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._attachedRef;\n    /**\n     * Emits when a portal is attached to the outlet.\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attached;\n    /**\n     * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._viewContainerRef;\n}\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = function PortalHostDirective_Factory(t) { return ɵPortalHostDirective_BaseFactory(t || PortalHostDirective); };\nPortalHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PortalHostDirective, selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]], inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, exportAs: [\"cdkPortalHost\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵPortalHostDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(PortalHostDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalHostDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            }]\n    }], null, null); })();\nclass PortalModule {\n}\nPortalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PortalModule });\nPortalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PortalModule_Factory(t) { return new (t || PortalModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PortalModule, { declarations: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective], exports: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-injector.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nclass PortalInjector {\n    /**\n     * @param {?} _parentInjector\n     * @param {?} _customTokens\n     */\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) {\n        /** @type {?} */\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._parentInjector;\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._customTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n//# sourceMappingURL=portal.js.map","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, Optional, Inject, ɵɵdefineInjectable, ɵɵinject, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, merge, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { isDataSource, ArrayDataSource } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the virtual scrolling strategy.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n/**\n * A strategy that dictates which items should be rendered in the viewport.\n * @record\n */\nfunction VirtualScrollStrategy() { }\nif (false) {\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    VirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.attach = function (viewport) { };\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.detach = function () { };\n    /**\n     * Called when the viewport is scrolled (debounced using requestAnimationFrame).\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentScrolled = function () { };\n    /**\n     * Called when the length of the data changes.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onDataLengthChanged = function () { };\n    /**\n     * Called when the range of items rendered in the DOM has changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentRendered = function () { };\n    /**\n     * Called when the offset of the rendered items changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onRenderedOffsetChanged = function () { };\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.scrollToIndex = function (index, behavior) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/fixed-size-virtual-scroll.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /**\n         * \\@docs-private Implemented as part of VirtualScrollStrategy.\n         */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /**\n         * The attached viewport.\n         */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentRendered() { }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /**\n     * Update the viewport's total content size.\n     * @private\n     * @return {?}\n     */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /**\n     * Update the viewport's rendered range.\n     * @private\n     * @return {?}\n     */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        /** @type {?} */\n        const scrollOffset = this._viewport.measureScrollOffset();\n        /** @type {?} */\n        const firstVisibleIndex = scrollOffset / this._itemSize;\n        /** @type {?} */\n        const renderedRange = this._viewport.getRenderedRange();\n        /** @type {?} */\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        /** @type {?} */\n        const viewportSize = this._viewport.getViewportSize();\n        /** @type {?} */\n        const dataLength = this._viewport.getDataLength();\n        /** @type {?} */\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            /** @type {?} */\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            /** @type {?} */\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                /** @type {?} */\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._scrolledIndexChange;\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @type {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * The attached viewport.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._viewport;\n    /**\n     * The size of the items in the virtually scrolling list.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._itemSize;\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._minBufferPx;\n    /**\n     * The number of buffer items to render beyond the edge of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._maxBufferPx;\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param {?} fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n * @return {?}\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/**\n * A virtual scroll strategy that supports fixed-size items.\n */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /**\n         * The scroll strategy used by this directive.\n         */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /**\n     * The size of the items in the list (in pixels).\n     * @return {?}\n     */\n    get itemSize() { return this._itemSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     * @return {?}\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     * @return {?}\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(( /**\n                         * @return {?}\n                         */() => CdkFixedSizeVirtualScroll))]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(( /**\n                                 * @return {?}\n                                 */() => CdkFixedSizeVirtualScroll))]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_maxBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._maxBufferPx;\n    /**\n     * The scroll strategy used by this directive.\n     * @type {?}\n     */\n    CdkFixedSizeVirtualScroll.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scroll-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the scrolling events by default.\n * @type {?}\n */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?=} document\n     */\n    constructor(_ngZone, _platform, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next(scrollable))));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    deregister(scrollable) {\n        /** @type {?} */\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            /** @type {?} */\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            });\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((/**\n         * @param {?} _\n         * @param {?} container\n         * @return {?}\n         */\n        (_, container) => this.deregister(container)));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ancestorScrolled(elementRef, auditTimeInMs) {\n        /** @type {?} */\n        const ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => {\n            return !target || ancestors.indexOf(target) > -1;\n        })));\n    }\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    getAncestorScrollContainers(elementRef) {\n        /** @type {?} */\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((/**\n         * @param {?} _subscription\n         * @param {?} scrollable\n         * @return {?}\n         */\n        (_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        }));\n        return scrollingContainers;\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @private\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    _scrollableContainsElement(scrollable, elementRef) {\n        /** @type {?} */\n        let element = elementRef.nativeElement;\n        /** @type {?} */\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = (/** @type {?} */ (element)).parentElement);\n        return false;\n    }\n    /**\n     * Sets up the global scroll listeners.\n     * @private\n     * @return {?}\n     */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next()));\n        }));\n    }\n    /**\n     * Cleans up the global scroll listener.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\n/** @nocollapse */\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8)); }, token: ScrollDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    ScrollDispatcher.prototype._document;\n    /**\n     * Subject for notifying that a registered scrollable reference element has been scrolled.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolled;\n    /**\n     * Keeps track of the global `scroll` and `resize` subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype._globalSubscription;\n    /**\n     * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolledCount;\n    /**\n     * Map of all the scrollable references that are registered with the service and their\n     * scroll event subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype.scrollContainers;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrollable.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     * @param {?=} dir\n     */\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    scrollTo(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            ((/** @type {?} */ (options))).top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                ((/** @type {?} */ (options))).right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                ((/** @type {?} */ (options))).left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    _applyScrollToOptions(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        /** @type {?} */\n        const LEFT = 'left';\n        /** @type {?} */\n        const RIGHT = 'right';\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\n/** @nocollapse */\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._elementScrolled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.scrollDispatcher;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.ngZone;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/viewport-ruler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the resize events by default.\n * @type {?}\n */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Object that holds the scroll position of the viewport in each direction.\n * @record\n */\nfunction ViewportScrollPosition() { }\nif (false) {\n    /** @type {?} */\n    ViewportScrollPosition.prototype.top;\n    /** @type {?} */\n    ViewportScrollPosition.prototype.left;\n}\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nclass ViewportRuler {\n    /**\n     * @param {?} _platform\n     * @param {?} ngZone\n     * @param {?=} document\n     */\n    constructor(_platform, ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._platform = _platform;\n        this._document = document;\n        ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const window = this._getWindow();\n            this._change = _platform.isBrowser ?\n                merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                of();\n            // Note that we need to do the subscription inside `runOutsideAngular`\n            // since subscribing is what causes the event listener to be added.\n            this._invalidateCache = this.change().subscribe((/**\n             * @return {?}\n             */\n            () => this._updateViewportSize()));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._invalidateCache.unsubscribe();\n    }\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        /** @type {?} */\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = (/** @type {?} */ (null));\n        }\n        return output;\n    }\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        /** @type {?} */\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        /** @type {?} */\n        const document = this._getDocument();\n        /** @type {?} */\n        const window = this._getWindow();\n        /** @type {?} */\n        const documentElement = (/** @type {?} */ (document.documentElement));\n        /** @type {?} */\n        const documentRect = documentElement.getBoundingClientRect();\n        /** @type {?} */\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        /** @type {?} */\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Updates the cached viewport size.\n     * @private\n     * @return {?}\n     */\n    _updateViewportSize() {\n        /** @type {?} */\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\n/** @nocollapse */\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ViewportRuler.ɵprov = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone), ɵɵinject(DOCUMENT, 8)); }, token: ViewportRuler, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._viewportSize;\n    /**\n     * Stream of viewport change events.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._change;\n    /**\n     * Subscription to streams that invalidate the cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._invalidateCache;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    ViewportRuler.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-viewport.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Checks if the given ranges are equal.\n * @param {?} r1\n * @param {?} r2\n * @return {?}\n */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n * @type {?}\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/**\n * A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`.\n */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} ngZone\n     * @param {?} _scrollStrategy\n     * @param {?} dir\n     * @param {?} scrollDispatcher\n     * @param {?=} viewportRuler\n     */\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, \n    /**\n     * @deprecated `viewportRuler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /**\n         * Emits when the viewport is detached from a CdkVirtualForOf.\n         */\n        this._detachedSubject = new Subject();\n        /**\n         * Emits when the rendered range changes.\n         */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /**\n         * Emits when the index of the first element visible in the viewport changes.\n         */\n        this.scrolledIndexChange = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this._scrollStrategy.scrolledIndexChange.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => this.ngZone.run((/**\n         * @return {?}\n         */\n        () => observer.next(index)))))))));\n        /**\n         * A stream that emits whenever the rendered range changes.\n         */\n        this.renderedRangeStream = this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /**\n         * A string representing the `style.width` property value to be used for the spacer element.\n         */\n        this._totalContentWidth = '';\n        /**\n         * A string representing the `style.height` property value to be used for the spacer element.\n         */\n        this._totalContentHeight = '';\n        /**\n         * The currently rendered range of indices.\n         */\n        this._renderedRange = { start: 0, end: 0 };\n        /**\n         * The length of the data bound to this viewport (in number of items).\n         */\n        this._dataLength = 0;\n        /**\n         * The size of the viewport (in pixels).\n         */\n        this._viewportSize = 0;\n        /**\n         * The last rendered content offset that was set.\n         */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /**\n         * Whether there is a pending change detection cycle.\n         */\n        this._isChangeDetectionPending = false;\n        /**\n         * A list of functions to run after the next change detection cycle.\n         */\n        this._runAfterChangeDetection = [];\n        /**\n         * Subscription to changes in the viewport size.\n         */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        // @breaking-change 11.0.0 Remove null check for `viewportRuler`.\n        if (viewportRuler) {\n            this._viewportChanges = viewportRuler.change().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.checkViewportSize();\n            }));\n        }\n    }\n    /**\n     * The direction the viewport scrolls.\n     * @return {?}\n     */\n    get orientation() {\n        return this._orientation;\n    }\n    /**\n     * @param {?} orientation\n     * @return {?}\n     */\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith((/** @type {?} */ (null))), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentScrolled()));\n            this._markChangeDetectionNeeded();\n        }))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    attach(forOf) {\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => {\n                /** @type {?} */\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            }));\n        }));\n    }\n    /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentRendered()));\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        /** @type {?} */\n        const isHorizontal = this.orientation == 'horizontal';\n        /** @type {?} */\n        const axis = isHorizontal ? 'X' : 'Y';\n        /** @type {?} */\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        /** @type {?} */\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            }));\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        /** @type {?} */\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        return from ?\n            super.measureScrollOffset(from) :\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    measureRenderedContentSize() {\n        /** @type {?} */\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /**\n     * Measure the viewport size.\n     * @private\n     * @return {?}\n     */\n    _measureViewportSize() {\n        /** @type {?} */\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /**\n     * Queue up change detection to run.\n     * @private\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._doChangeDetection();\n            }))));\n        }\n    }\n    /**\n     * Run change detection.\n     * @private\n     * @return {?}\n     */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        /** @type {?} */\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /**\n     * Calculates the `style.width` and `style.height` for the spacer element.\n     * @private\n     * @return {?}\n     */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler, 8)); };\nCdkVirtualScrollViewport.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the viewport is detached from a CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._detachedSubject;\n    /**\n     * Emits when the rendered range changes.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRangeSubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._orientation;\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.scrolledIndexChange;\n    /**\n     * The element that wraps the rendered content.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._contentWrapper;\n    /**\n     * A stream that emits whenever the rendered range changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.renderedRangeStream;\n    /**\n     * The total size of all content (in pixels), including content that is not currently rendered.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._totalContentSize;\n    /**\n     * A string representing the `style.width` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentWidth;\n    /**\n     * A string representing the `style.height` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentHeight;\n    /**\n     * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n     * of the visible viewport.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentTransform;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRange;\n    /**\n     * The length of the data bound to this viewport (in number of items).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._dataLength;\n    /**\n     * The size of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportSize;\n    /**\n     * the currently attached CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._forOf;\n    /**\n     * The last rendered content offset that was set.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffset;\n    /**\n     * Whether the last rendered content offset was to the end of the content (and therefore needs to\n     * be rewritten as an offset to the start of the content).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffsetNeedsRewrite;\n    /**\n     * Whether there is a pending change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._isChangeDetectionPending;\n    /**\n     * A list of functions to run after the next change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._runAfterChangeDetection;\n    /**\n     * Subscription to changes in the viewport size.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportChanges;\n    /** @type {?} */\n    CdkVirtualScrollViewport.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-for-of.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Helper to extract size from a DOM Node.\n * @param {?} orientation\n * @param {?} node\n * @return {?}\n */\nfunction getSize(orientation, node) {\n    /** @type {?} */\n    const el = (/** @type {?} */ (node));\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    /** @type {?} */\n    const rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n * @template T\n */\nclass CdkVirtualForOf {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _template\n     * @param {?} _differs\n     * @param {?} _viewport\n     * @param {?} ngZone\n     */\n    constructor(_viewContainerRef, _template, _differs, _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /**\n         * Emits when the rendered view of the data changes.\n         */\n        this.viewChange = new Subject();\n        /**\n         * Subject that emits when a new DataSource instance is given.\n         */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /**\n         * Emits whenever the data in the current DataSource changes.\n         */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith((/** @type {?} */ (null))), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([prev, cur]) => this._changeDataSource(prev, cur))), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /**\n         * The differ used to calculate changes to the data.\n         */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /**\n         * Whether the rendered data should be updated during the next ngDoCheck cycle.\n         */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        }));\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} range\n         * @return {?}\n         */\n        range => {\n            this._renderedRange = range;\n            ngZone.run((/**\n             * @return {?}\n             */\n            () => this.viewChange.next(this._renderedRange)));\n            this._onRenderedDataChange();\n        }));\n        this._viewport.attach(this);\n    }\n    /**\n     * The DataSource to display.\n     * @return {?}\n     */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // Slice the value if its an NgIterable to ensure we're working with an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.prototype.slice.call(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     * @return {?}\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (/**\n             * @param {?} index\n             * @param {?} item\n             * @return {?}\n             */\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)) :\n            undefined;\n    }\n    /**\n     * The template used to stamp out new elements.\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        /** @type {?} */\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        /** @type {?} */\n        const rangeLen = range.end - range.start;\n        // Loop over all root nodes for all items in the range and sum up their size.\n        /** @type {?} */\n        let totalSize = 0;\n        /** @type {?} */\n        let i = rangeLen;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i + renderedStartIndex)));\n            /** @type {?} */\n            let j = view ? view.rootNodes.length : 0;\n            while (j--) {\n                totalSize += getSize(orientation, (/** @type {?} */ (view)).rootNodes[j]);\n            }\n        }\n        return totalSize;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            /** @type {?} */\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next();\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (let view of this._templateCache) {\n            view.destroy();\n        }\n    }\n    /**\n     * React to scroll state changes in the viewport.\n     * @private\n     * @return {?}\n     */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    }\n    /**\n     * Swap out one `DataSource` for another.\n     * @private\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @private\n     * @return {?}\n     */\n    _updateContext() {\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            let view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /**\n     * Apply changes to the DOM.\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyChanges(changes) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, adjustedPreviousIndex, currentIndex) => {\n            if (record.previousIndex == null) { // Item added.\n                // Item added.\n                /** @type {?} */\n                const view = this._insertViewForNewItem((/** @type {?} */ (currentIndex)));\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._cacheView(this._detachView((/** @type {?} */ (adjustedPreviousIndex))));\n            }\n            else { // Item moved.\n                // Item moved.\n                /** @type {?} */\n                const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (adjustedPreviousIndex)))));\n                this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        }));\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (record.currentIndex)))));\n            view.context.$implicit = record.item;\n        }));\n        // Update the context variables on all items.\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /**\n     * Cache the given detached view.\n     * @private\n     * @param {?} view\n     * @return {?}\n     */\n    _cacheView(view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            /** @type {?} */\n            const index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new one.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewForNewItem(index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    }\n    /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    /**\n     * Creates a new embedded view and moves it to the given index\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createEmbeddedViewAt(index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: (/** @type {?} */ (null)),\n            // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n            // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n            cdkVirtualForOf: (/** @type {?} */ (this._cdkVirtualForOf)),\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    }\n    /**\n     * Inserts a recycled view from the cache at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewFromCache(index) {\n        /** @type {?} */\n        const cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n    /**\n     * Detaches the embedded view at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _detachView(index) {\n        return (/** @type {?} */ (this._viewContainerRef.detach(index)));\n    }\n}\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\", cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\" } });\n/** @nocollapse */\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }], cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the rendered view of the data changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.viewChange;\n    /**\n     * Subject that emits when a new DataSource instance is given.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._dataSourceChanges;\n    /** @type {?} */\n    CdkVirtualForOf.prototype._cdkVirtualForOf;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._cdkVirtualForTrackBy;\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.cdkVirtualForTemplateCacheSize;\n    /**\n     * Emits whenever the data in the current DataSource changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.dataStream;\n    /**\n     * The differ used to calculate changes to the data.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differ;\n    /**\n     * The most recent data emitted from the DataSource.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._data;\n    /**\n     * The currently rendered items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedItems;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedRange;\n    /**\n     * The template cache used to hold on ot template instancess that have been stamped out, but don't\n     * currently need to be rendered. These instances will be reused in the future rather than\n     * stamping out brand new ones.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._templateCache;\n    /**\n     * Whether the rendered data should be updated during the next ngDoCheck cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._needsUpdate;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._destroyed;\n    /**\n     * The view container to add items to.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewContainerRef;\n    /**\n     * The template to use when stamping out new items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._template;\n    /**\n     * The set of available differs.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differs;\n    /**\n     * The virtual scrolling viewport that these items are being rendered in.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewport;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrolling-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkScrollableModule {\n}\nCdkScrollableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkScrollableModule });\nCdkScrollableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkScrollableModule_Factory(t) { return new (t || CdkScrollableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkScrollableModule, { declarations: [CdkScrollable], exports: [CdkScrollable] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollableModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkScrollable],\n                declarations: [CdkScrollable]\n            }]\n    }], null, null); })();\nclass ScrollingModule {\n}\nScrollingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); }, imports: [[\n            BidiModule,\n            PlatformModule,\n            CdkScrollableModule\n        ],\n        BidiModule,\n        CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule,\n        PlatformModule,\n        CdkScrollableModule]; }, exports: function () { return [BidiModule,\n        CdkScrollableModule,\n        CdkFixedSizeVirtualScroll,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    BidiModule,\n                    PlatformModule,\n                    CdkScrollableModule\n                ],\n                exports: [\n                    BidiModule,\n                    CdkScrollableModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n//# sourceMappingURL=scrolling.js.map","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, hasModifierKey, SPACE, HOME, END } from '@angular/cdk/keycodes';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, group, query, animateChild } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/accordion-base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a `MatAccordion`.\n * \\@docs-private\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nconst _c3 = function (a0, a1) { return { collapsedHeight: a0, expandedHeight: a1 }; };\nconst _c4 = function (a0, a1) { return { value: a0, params: a1 }; };\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c5 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c6 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nfunction MatAccordionBase() { }\nif (false) {\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.displayMode;\n    /**\n     * The position of the expansion indicator.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.togglePosition;\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @type {?}\n     */\n    MatAccordionBase.prototype._handleHeaderKeydown;\n    /**\n     * Handles focus events on the panel headers.\n     * @type {?}\n     */\n    MatAccordionBase.prototype._handleHeaderFocus;\n}\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n * @type {?}\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time and timing curve for expansion panel animations.\n * @type {?}\n */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * \\@docs-private\n * @type {?}\n */\nconst matExpansionAnimations = {\n    /**\n     * Animation that rotates the indicator arrow.\n     */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /**\n     * Animation that expands and collapses the panel header height.\n     */\n    expansionHeaderHeight: trigger('expansionHeight', [\n        state('collapsed, void', style({\n            height: '{{collapsedHeight}}',\n        }), {\n            params: { collapsedHeight: '48px' },\n        }),\n        state('expanded', style({\n            height: '{{expandedHeight}}'\n        }), {\n            params: { expandedHeight: '64px' }\n        }),\n        transition('expanded <=> collapsed, void => collapsed', group([\n            query('@indicatorRotate', animateChild(), { optional: true }),\n            animate(EXPANSION_PANEL_ANIMATION_TIMING),\n        ])),\n    ]),\n    /**\n     * Animation that expands and collapses the panel content.\n     */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\n/** @nocollapse */\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatExpansionPanelContent.prototype._template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter for generating unique element ids.\n * @type {?}\n */\nlet uniqueId = 0;\n/**\n * Object that can be used to override the default options\n * for all of the expansion panels in a module.\n * @record\n */\nfunction MatExpansionPanelDefaultOptions() { }\nif (false) {\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.collapsedHeight;\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.hideToggle;\n}\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n * @type {?}\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _uniqueSelectionDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     * @param {?} _animationMode\n     * @param {?=} defaultOptions\n     */\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /**\n         * An event emitted after the body's expansion animation happens.\n         */\n        this.afterExpand = new EventEmitter();\n        /**\n         * An event emitted after the body's collapse animation happens.\n         */\n        this.afterCollapse = new EventEmitter();\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        this._inputChanges = new Subject();\n        /**\n         * ID for the associated header element. Used for a11y labelling.\n         */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /**\n         * Stream of body animation done events.\n         */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        }));\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /**\n     * The position of the expansion indicator.\n     * @return {?}\n     */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /**\n     * Toggles the expanded state of the expansion panel.\n     * @return {?}\n     */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /**\n     * Sets the expanded state of the expansion panel to false.\n     * @return {?}\n     */\n    close() {\n        this.expanded = false;\n    }\n    /**\n     * Sets the expanded state of the expansion panel to true.\n     * @return {?}\n     */\n    open() {\n        this.expanded = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith((/** @type {?} */ (null))), filter((/**\n             * @return {?}\n             */\n            () => this.expanded && !this._portal)), take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /**\n     * Checks whether the expansion panel's content contains the currently-focused element.\n     * @return {?}\n     */\n    _containsFocus() {\n        if (this._body) {\n            /** @type {?} */\n            const focusedElement = this._document.activeElement;\n            /** @type {?} */\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_hideToggle;\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_expanded;\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._togglePosition;\n    /**\n     * An event emitted after the body's expansion animation happens.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.afterExpand;\n    /**\n     * An event emitted after the body's collapse animation happens.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.afterCollapse;\n    /**\n     * Stream that emits for changes in `\\@Input` properties.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._inputChanges;\n    /**\n     * Optionally defined accordion the expansion panel belongs to.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.accordion;\n    /**\n     * Content that will be rendered lazily.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._lazyContent;\n    /**\n     * Element containing the panel's user-provided content.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._body;\n    /**\n     * Portal holding the user's content.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._portal;\n    /**\n     * ID for the associated header element. Used for a11y labelling.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._headerId;\n    /**\n     * Stream of body animation done events.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._bodyAnimationDone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._viewContainerRef;\n    /** @type {?} */\n    MatExpansionPanel.prototype._animationMode;\n}\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    /**\n     * @param {?} panel\n     * @param {?} _element\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultOptions\n     */\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        /**\n         * Whether Angular animations in the panel header should be disabled.\n         */\n        this._animationsDisabled = true;\n        /** @type {?} */\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter((/**\n             * @param {?} changes\n             * @return {?}\n             */\n            changes => !!(changes['hideToggle'] || changes['togglePosition'])))) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter((/**\n             * @param {?} changes\n             * @return {?}\n             */\n            changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            }))))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter((/**\n         * @return {?}\n         */\n        () => panel._containsFocus())))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => _focusMonitor.focusVia(_element, 'program')));\n        _focusMonitor.monitor(_element).subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            if (origin && panel.accordion) {\n                panel.accordion._handleHeaderFocus(this);\n            }\n        }));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _animationStarted() {\n        // Currently the `expansionHeight` animation has a `void => collapsed` transition which is\n        // there to work around a bug in Angular (see #13088), however this introduces a different\n        // issue. The new transition will cause the header to animate in on init (see #16067), if the\n        // consumer has set a header height that is different from the default one. We work around it\n        // by disabling animations on the header and re-enabling them after the first animation has run.\n        // Note that Angular dispatches animation events even if animations are disabled. Ideally this\n        // wouldn't be necessary if we remove the `void => collapsed` transition, but we have to wait\n        // for https://github.com/angular/angular/issues/18847 to be resolved.\n        this._animationsDisabled = false;\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /**\n     * Gets the toggle position for the header.\n     * @return {?}\n     */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Handle keydown event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @param {?=} origin Origin of the action that triggered the focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanelHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"], hostVars: 19, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@expansionHeight.start\", function MatExpansionPanelHeader_animation_expansionHeight_start_HostBindingHandler() { return ctx._animationStarted(); });\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? 0 - 1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@.disabled\", ctx._animationsDisabled)(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(16, _c4, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(13, _c3, ctx.collapsedHeight, ctx.expandedHeight)));\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\");\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c6, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;position:relative}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n            matExpansionAnimations.expansionHeaderHeight\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                    matExpansionAnimations.expansionHeaderHeight\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header mat-focus-indicator',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)',\n                    '[@.disabled]': '_animationsDisabled',\n                    '(@expansionHeight.start)': '_animationStarted()',\n                    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;position:relative}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"]\n            }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._parentChangeSubscription;\n    /**\n     * Whether Angular animations in the panel header should be disabled.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype._animationsDisabled;\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.collapsedHeight;\n    /** @type {?} */\n    MatExpansionPanelHeader.prototype.panel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._changeDetectorRef;\n}\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /**\n         * Headers belonging to this accordion.\n         */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /**\n         * The position of the expansion indicator.\n         */\n        this.togglePosition = 'after';\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() { return this._hideToggle; }\n    /**\n     * @param {?} show\n     * @return {?}\n     */\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((/**\n         * @param {?} headers\n         * @return {?}\n         */\n        (headers) => {\n            this._ownHeaders.reset(headers.filter((/**\n             * @param {?} header\n             * @return {?}\n             */\n            header => header.panel.accordion === this)));\n            this._ownHeaders.notifyOnChanges();\n        }));\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap();\n    }\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleHeaderKeydown(event) {\n        const { keyCode } = event;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (keyCode === HOME) {\n            if (!hasModifierKey(event)) {\n                manager.setFirstItemActive();\n                event.preventDefault();\n            }\n        }\n        else if (keyCode === END) {\n            if (!hasModifierKey(event)) {\n                manager.setLastItemActive();\n                event.preventDefault();\n            }\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = function MatAccordion_Factory(t) { return ɵMatAccordion_BaseFactory(t || MatAccordion); };\nMatAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\nconst ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAccordion.ngAcceptInputType_hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._keyManager;\n    /**\n     * Headers belonging to this accordion.\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._ownHeaders;\n    /**\n     * All headers inside the accordion. Includes headers inside nested accordions.\n     * @type {?}\n     */\n    MatAccordion.prototype._headers;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     * @type {?}\n     */\n    MatAccordion.prototype.displayMode;\n    /**\n     * The position of the expansion indicator.\n     * @type {?}\n     */\n    MatAccordion.prototype.togglePosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); }, imports: [[CommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n\n//# sourceMappingURL=expansion.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/material/form-field';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r4.id + \"-panel\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 11, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc6.CdkConnectedOverlay, ɵngcc7.NgSwitchDefault, ɵngcc7.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatFormFieldModule,\n                    MatSelect,\n                    MatSelectTrigger,\n                    MatOptionModule,\n                    MatCommonModule\n                ],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { Injectable } from '@angular/core';\nimport { AlertController, ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(public alertCtrl: AlertController,\n              public toastCtrl: ToastController) { }\n\nasync okAlert(header, message){\n  const alert = await this.alertCtrl.create({\n    header,\n    message,\n    buttons: [\n      {\n        text: \"Ok\",\n  //        cssClass: \"secondary\",\n        handler: blah => {\n        }\n      },\n    ]\n  });\n  await alert.present();\n}\n\n\n  async confirm(message, callback: any) {\n    const alert = await this.alertCtrl.create({\n      header: \"Excluir?\",\n      message,\n      buttons: [\n        {\n          text: \"Cancelar\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: blah => {\n            console.log(\"Confirm Cancel: blah\");\n          }\n        },\n        {\n          text: \"Ok\",\n          handler: () => {\n            callback();\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async toast(message: string, duration: number, position) {\n    const toast = await this.toastCtrl.create({\n      message: message,\n      duration: duration,\n      position: position    });\n    toast.present();\n  }\n}\n"]}